{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\reactnativeapps\\\\AI\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport Component from 'react';\nimport { DrawerLayoutAndroidComponent } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport styles from \"./styles/Gridstyles\";\nvar blocks = [];\nvar tileValues = [];\nvar moveValues = [];\nvar map = [];\nvar beenThere = [];\nvar futureValues = [];\nvar OpenSet = [];\nvar ClosedSet = [];\nvar xSize = 5;\nvar ySize = 5;\nvar mapSize = xSize * ySize;\nvar dir = [];\nvar loc = 0;\nvar start = [0, 0];\nvar end = [xSize - 1, ySize - 1];\n\nvar app = function (_React$Component) {\n  _inherits(app, _React$Component);\n\n  var _super = _createSuper(app);\n\n  function app(props) {\n    var _this;\n\n    _classCallCheck(this, app);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      movecount: 1\n    };\n    _this.handleUpdate = _this.handleUpdate.bind(_assertThisInitialized(_this));\n    Mapinit();\n    console.log(map);\n    return _this;\n  }\n\n  _createClass(app, [{\n    key: \"handleUpdate\",\n    value: function handleUpdate() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 5\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, this.state.movecount), React.createElement(Button, {\n        title: \"start\",\n        onPress: this.handleUpdate,\n        style: styles.startbutton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }\n      }), React.createElement(FlatList, {\n        data: map,\n        extraData: this.state,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(View, {\n            style: drawmap(item),\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: styles.GridViewInsideTextItemStyle,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 11\n            }\n          }, item.numv));\n        },\n        numColumns: xSize,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return app;\n}(React.Component);\n\nexport { app as default };\n\nfunction cell(nx, ny, random) {\n  var x = nx;\n  var y = ny;\n  var loc = [x, y];\n  var wall = wallorNot(random);\n  var blocks = Neighbours(x, y);\n  return {\n    'x': x,\n    'y': y,\n    'wall': wall,\n    'Neighbours': blocks\n  };\n}\n\nfunction Neighbours(x, y) {\n  var NL = [];\n\n  if (x > 0) {\n    NL.push(x - 1, y);\n  }\n\n  if (x < xSize - 1) {\n    NL.push(x + 1, y);\n  }\n\n  if (y > 0) {\n    NL.push(x, y - 1);\n  }\n\n  if (x < ySize - 1) {\n    NL.push(x, y + 1);\n  }\n\n  return NL;\n}\n\nfunction wallorNot(random) {\n  if (random > 0.8) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction Mapinit() {\n  for (var y = 0; y < ySize; y++) {\n    for (var x = 0; x < xSize; x++) {\n      var randomnum = Math.random();\n      map.push(cell(x, y, randomnum));\n      console.log(randomnum);\n    }\n  }\n}\n\nfunction drawmap(item) {\n  var blockstyle;\n\n  if (!item.wall) {\n    blockstyle = styles.mapfree;\n  }\n\n  if (item) {} else {\n    blockstyle = styles.mapblock;\n  }\n\n  return blockstyle;\n}","map":{"version":3,"sources":["C:/reactnativeapps/AI/App.js"],"names":["StatusBar","React","useState","useEffect","Component","DrawerLayoutAndroidComponent","styles","blocks","tileValues","moveValues","map","beenThere","futureValues","OpenSet","ClosedSet","xSize","ySize","mapSize","dir","loc","start","end","app","props","state","movecount","handleUpdate","bind","Mapinit","console","log","container","startbutton","item","drawmap","GridViewInsideTextItemStyle","numv","cell","nx","ny","random","x","y","wall","wallorNot","Neighbours","NL","push","randomnum","Math","blockstyle","mapfree","mapblock"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\n\nimport React ,{ useState, useEffect }from 'react';\n\nimport Component from 'react';\n\nimport { DrawerLayoutAndroidComponent, StyleSheet, Text, View, FlatList, Button } from 'react-native';\n\nimport styles from './styles/Gridstyles';\n\n  const blocks=[];\n  const tileValues=[];\n  const moveValues=[];\n  const map=[];\n  const beenThere=[];\n  const futureValues=[];\n\n  var OpenSet=[];\n  var ClosedSet=[];\n\n  var xSize = 5;\n  var ySize = 5;\n  var mapSize = xSize*ySize;\n  const dir = [];\n  var loc = 0;\n\n  var start = [0,0];\n  var end = [xSize-1,ySize-1];\n\n  \n\n  export default class app extends React.Component{\n\n    constructor(props) {\n      super(props);\n      this.state={movecount:1};\n      this.handleUpdate = this.handleUpdate.bind(this);\n      Mapinit();   \n      console.log(map); \n    }\n\n    handleUpdate() {\n      \n\n\n    }\n    \n  render(){\n    return(\n    <View style={styles.container}>\n      <Text>{this.state.movecount}</Text>\n      <Button title=\"start\" onPress={this.handleUpdate} style={styles.startbutton}></Button>\n      <FlatList\n        data={map}\n        extraData={this.state}\n        renderItem={({item}) => <View style={drawmap(item)}>\n          <Text style={styles.GridViewInsideTextItemStyle}>{item.numv}</Text>            \n        </View>}\n        numColumns={xSize}\n      />\n    </View>\n    );\n  }\n \n}\n\nfunction cell(nx,ny,random){\n\n  let x = nx;\n  let y = ny;\n  let loc = [x,y];\n  let wall = wallorNot(random);\n  var blocks = Neighbours(x,y);\n  // jatka tästä\n  return {'x':x,'y':y,'wall':wall, 'Neighbours':blocks};\n}\n\nfunction Neighbours(x,y){\n\n  var NL = [];\n\n  if(x > 0){ // voiko mennä ylös\n    NL.push(x-1,y);\n  }\n  if(x < xSize-1){\n    NL.push(x+1,y);\n  }\n  if(y > 0){\n    NL.push(x,y-1);\n  }\n  if(x < ySize-1){\n    NL.push(x,y+1);\n  }\n\n  return NL;\n}\n\nfunction wallorNot(random){\n  if(random>0.8){\n    return true;\n  }\n  else{\n    return false;\n  }\n\n}\n\nfunction Mapinit(){\n  for (let y = 0; y < ySize; y++) {\n    for (let x = 0; x < xSize; x++) {\n      var randomnum = Math.random();\n      map.push(cell(x,y,randomnum));\n      console.log(randomnum);\n     }\n  }\n}\n\n\nfunction drawmap(item){\n  var blockstyle;\n   \n  if (!item.wall){\n    blockstyle = styles.mapfree;\n  }\n  if (item){\n    \n  }\n  else{\n    blockstyle = styles.mapblock;\n  }\n  return(blockstyle);\n}"]},"metadata":{},"sourceType":"module"}