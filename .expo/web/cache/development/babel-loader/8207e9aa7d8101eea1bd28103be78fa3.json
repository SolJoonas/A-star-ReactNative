{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"c:\\\\reactnativeapps\\\\AI\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport Component from 'react';\nimport { DrawerLayoutAndroidComponent } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nvar blocks = [];\nvar moveValues = [];\nvar map = [];\nvar xSize = 5;\nvar ySize = 5;\nvar mapSize = xSize * ySize;\nvar dir = [];\n\nvar app = function (_React$Component) {\n  _inherits(app, _React$Component);\n\n  var _super = _createSuper(app);\n\n  function app(props) {\n    var _this;\n\n    _classCallCheck(this, app);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      movecount: 1\n    };\n    _this.handleUpdate = _this.handleUpdate.bind(_assertThisInitialized(_this));\n    Mapinit();\n    return _this;\n  }\n\n  _createClass(app, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 5\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      }, this.state.movecount), React.createElement(Button, {\n        title: \"start\",\n        onPress: (testmove, this.handleUpdate),\n        style: styles.startbutton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }), React.createElement(FlatList, {\n        data: map,\n        extraData: this.state,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(View, {\n            style: drawmap(item),\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: styles.GridViewInsideTextItemStyle,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 11\n            }\n          }, item.numv));\n        },\n        numColumns: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }));\n    }\n  }, {\n    key: \"handleUpdate\",\n    value: function handleUpdate() {\n      var loc = 1;\n      map[loc] = {\n        numv: loc,\n        func: 'worm'\n      };\n      this.setState({\n        movecount: this.state.movecount + 1\n      });\n    }\n  }]);\n\n  return app;\n}(React.Component);\n\nexport { app as default };\n\nfunction testmove() {\n  var loc = 1;\n  map[loc] = {\n    numv: loc,\n    func: 'worm'\n  };\n}\n\nfunction DistanceToEnd(loc) {\n  var distance;\n\n  switch (loc) {\n    case loc < 6:\n      distance = loc - 5 + 4;\n      break;\n\n    case loc < 11:\n      distance = loc - 10 + 3;\n      break;\n\n    case loc < 16:\n      distance = loc - 15 + 2;\n      break;\n\n    case loc < 21:\n      distance = loc - 20 + 1;\n      break;\n\n    case loc < 26:\n      distance = loc - 25 + 0;\n      break;\n  }\n\n  return distance;\n}\n\nfunction bestmove(loc) {\n  moves(loc);\n\n  for (var index = 0; index < dir.length; index++) {\n    var value = 25 - DistanceToEnd(dir[index]);\n\n    if (blocks.includes(dir[index])) {\n      value = 0;\n    } else if (index == 0 && loc < xSize) {\n      value = 0;\n    } else if (index == 3 && loc % ySize == 0) {\n      value = 0;\n    } else if (index == 2 && loc % ySize == 1) {\n      value = 0;\n    } else if (index == 0 && loc > mapSize - xSize) {\n      value = 0;\n    }\n\n    moveValues.push(value);\n  }\n}\n\nfunction direction(index) {\n  var basicdir = ['up', 'down', 'left', 'right'];\n  return basicdir[index];\n}\n\nfunction moves(loc) {\n  var down = loc + xSize;\n  var up = loc - xSize;\n  var left = loc - 1;\n  var right = loc + 1;\n  dir.unshift(up, down, left, right);\n}\n\nfunction Mapinit() {\n  var blockobjectcount = 5;\n\n  for (var index = 0; index < blockobjectcount; index++) {\n    var randomnum = Math.floor(Math.random() * mapSize) + 1;\n\n    if (randomnum == 1) {\n      randomnum = randomnum + 1;\n    } else if (randomnum == mapSize) {\n      randomnum = randomnum - 1;\n    }\n\n    blocks.push(randomnum);\n  }\n\n  for (var _index = 0; _index < mapSize; _index++) {\n    var blocknum = _index + 1;\n\n    if (blocks.includes(blocknum)) {\n      map.push({\n        numv: _index + 1,\n        func: 'block'\n      });\n    } else {\n      map.push({\n        numv: _index + 1,\n        func: 'free'\n      });\n    }\n  }\n}\n\nfunction drawmap(item) {\n  var blockstyle;\n\n  if (item.func == 'block') {\n    blockstyle = styles.mapblock;\n  } else if (item.func == 'worm') {\n    blockstyle = styles.mapworm;\n  } else {\n    blockstyle = styles.mapfree;\n  }\n\n  return blockstyle;\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  mapfree: {\n    justifyContent: 'center',\n    flex: 1,\n    alignItems: 'center',\n    height: 50,\n    width: 50,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'white'\n  },\n  mapblock: {\n    justifyContent: 'center',\n    flex: 1,\n    alignItems: 'center',\n    height: 50,\n    width: 50,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'red'\n  },\n  mapworm: {\n    justifyContent: 'center',\n    flex: 1,\n    alignItems: 'center',\n    height: 50,\n    width: 50,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'blue'\n  },\n  startbutton: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 50,\n    width: 100,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'blue'\n  },\n  GridViewInsideTextItemStyle: {\n    color: '#fff',\n    fontSize: 18,\n    color: \"black\",\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["c:/reactnativeapps/AI/App.js"],"names":["StatusBar","React","useState","useEffect","Component","DrawerLayoutAndroidComponent","blocks","moveValues","map","xSize","ySize","mapSize","dir","app","props","state","movecount","handleUpdate","bind","Mapinit","styles","container","testmove","startbutton","item","drawmap","GridViewInsideTextItemStyle","numv","loc","func","setState","DistanceToEnd","distance","bestmove","moves","index","length","value","includes","push","direction","basicdir","down","up","left","right","unshift","blockobjectcount","randomnum","Math","floor","random","blocknum","blockstyle","mapblock","mapworm","mapfree","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","height","width","borderWidth","borderColor","color","fontSize"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\n\nimport React ,{ useState, useEffect }from 'react';\n\nimport Component from 'react';\n\nimport { DrawerLayoutAndroidComponent, StyleSheet, Text, View, FlatList, Button } from 'react-native';\n\n  const blocks=[];\n  const moveValues=[];\n  const map=[];\n\n  var xSize = 5;\n  var ySize = 5;\n  var mapSize = xSize*ySize;\n  const dir = [];\n  \n\n  export default class app extends React.Component{\n\n    constructor(props) {\n      super(props);\n      this.state={movecount:1};\n      this.handleUpdate = this.handleUpdate.bind(this);\n      Mapinit();    \n    }\n\n    \n  render(){\n    return(\n    <View style={styles.container}>\n      <Text>{this.state.movecount}</Text>\n      <Button title=\"start\" onPress={testmove, this.handleUpdate} style={styles.startbutton}></Button>\n      <FlatList\n        data={map}\n        extraData={this.state}\n        renderItem={({item}) => <View style={drawmap(item)}>\n          <Text style={styles.GridViewInsideTextItemStyle}>{item.numv}</Text>            \n        </View>}\n        numColumns={5}\n      />\n    </View>\n    );\n  }\n  handleUpdate() {\n    var loc = 1;\n    map[loc] = {numv:loc, func:'worm'};\n    this.setState({movecount: this.state.movecount + 1});\n}\n}\n\nfunction testmove(){\n  var loc = 1;\n  map[loc] = {numv:loc, func:'worm'};\n}\n\nfunction DistanceToEnd(loc){\n  var distance;\n  switch (loc) {\n    case loc<6:\n      distance = (loc - 5)+4;\n      break;\n    case loc<11:\n      distance = (loc - 10)+3;\n      break;\n    case loc<16:\n      distance = (loc - 15)+2;\n      break;\n    case loc<21:\n      distance = (loc - 20)+1;\n      break;\n    case loc<26:\n      distance = (loc - 25)+0;\n      break;\n  }\n\n  return(\n    distance\n  )\n}\n\nfunction bestmove(loc){\n  moves(loc)\n\n  for (let index = 0; index < dir.length; index++) {\n    var value = 25 - DistanceToEnd(dir[index]);\n    if (blocks.includes(dir[index])){\n      value = 0;\n    }\n    else if (index == 0 && loc < xSize){\n      value = 0; \n    }\n    else if (index == 3 && loc%ySize == 0){\n      value = 0; \n    }\n    else if (index == 2 && loc%ySize == 1){\n      value = 0; \n    }\n    else if (index == 0 && loc > mapSize-xSize){\n      value = 0;    \n    }\n    moveValues.push(value);\n  }\n}\n\nfunction direction(index){\n  const basicdir = ['up','down','left','right'];\n  return(\n    basicdir[index]\n  )\n}\n\nfunction moves(loc){\n  var down = loc + xSize;\n  var up = loc - xSize;\n  var left = loc - 1;\n  var right = loc + 1;\n  dir.unshift(up,down,left,right);\n}\n\nfunction Mapinit(){\n\n  var blockobjectcount = 5;\n\n  for (let index = 0; index < blockobjectcount; index++) {\n    var randomnum = Math.floor(Math.random() * mapSize) + 1\n    if (randomnum == 1){\n      randomnum = randomnum + 1;\n    }\n    else if (randomnum == mapSize){\n      randomnum = randomnum - 1;\n    }\n    blocks.push(randomnum);   \n  }\n  \n  for (let index = 0; index < mapSize; index++) {\n    var blocknum = index+1;\n    if(blocks.includes(blocknum)){\n      map.push({numv:index+1, func:'block'});\n    }\n    else{\n      map.push({numv:index+1, func:'free'});\n    }\n  }\n}\n\n\nfunction drawmap(item){\n   var blockstyle;\n   \n  if (item.func == 'block'){\n    blockstyle = styles.mapblock;\n  }\n  else if (item.func == 'worm'){\n    blockstyle = styles.mapworm;\n  }\n  else{\n    blockstyle = styles.mapfree;\n  }\n  return(blockstyle);\n}\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  mapfree: {\n    justifyContent: 'center',\n    flex:1,\n    alignItems: 'center',\n    height: 50,\n    width: 50,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'white'\n  },\n\n  mapblock: {\n    justifyContent: 'center',\n    flex:1,\n    alignItems: 'center',\n    height: 50,\n    width: 50,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'red'\n  },\n\n  mapworm: {\n    justifyContent: 'center',\n    flex:1,\n    alignItems: 'center',\n    height: 50,\n    width: 50,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'blue'\n  },\n\n  startbutton: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 50,\n    width: 100,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'blue'\n  },\n \n  GridViewInsideTextItemStyle: {\n \n   color: '#fff',\n   fontSize: 18,\n   color: \"black\",\n   justifyContent: 'center',\n   \n },\n});\n"]},"metadata":{},"sourceType":"module"}