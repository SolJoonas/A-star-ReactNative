{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\reactnativeapps\\\\AI\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport Component from 'react';\nimport { DrawerLayoutAndroidComponent } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport styles from \"./styles/Gridstyles\";\nvar map = [];\nvar OpenSet = [];\nvar ClosedSet = [];\nvar xSize = 20;\nvar ySize = 20;\nvar mapSize = xSize * ySize;\nvar start = [0, 0];\nvar end = [xSize - 1, ySize - 1];\nvar UltimateCurrent;\nvar testi;\n\nvar app = function (_React$Component) {\n  _inherits(app, _React$Component);\n\n  var _super = _createSuper(app);\n\n  function app(props) {\n    var _this;\n\n    _classCallCheck(this, app);\n\n    _this = _super.call(this, props);\n\n    _this.handleUpdate = function () {\n      aStar(UltimateCurrent);\n      trail();\n\n      _this.setState({\n        movecount: _this.state.movecount + 1\n      });\n    };\n\n    _this.state = {\n      movecount: 0\n    };\n    _this.handleUpdate = _this.handleUpdate.bind(_assertThisInitialized(_this));\n    Mapinit();\n    UltimateCurrent.push(map[0]);\n    console.log(map);\n    console.log(start);\n    console.log(end);\n    return _this;\n  }\n\n  _createClass(app, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 5\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }\n      }, this.state.movecount), React.createElement(Button, {\n        title: \"start\",\n        onPress: this.handleUpdate,\n        style: styles.startbutton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }\n      }), React.createElement(FlatList, {\n        data: map,\n        extraData: this.state.movecount,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(View, {\n            style: drawmap(item),\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: styles.GridViewInsideTextItemStyle,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 11\n            }\n          }, item.fscore));\n        },\n        numColumns: xSize,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return app;\n}(React.Component);\n\nexport { app as default };\n\nfunction aStar(current) {\n  do {\n    var goal = false;\n    var gscore = 0;\n\n    for (var pahts = 0; paths < current.length; paths++) {\n      for (var index = 0; index < 4; index++) {\n        current[paths].Neighbours = Neighbours(current[paths].x, current[paths].y, current[paths].ID);\n      }\n\n      for (var _index = 0; _index < current[paths].Neighbours.length; _index++) {\n        gscore = current[paths].gscore + 1;\n        current[paths].fscore = Distance(current[paths].Location) + gscore;\n        current[paths].Neighbours[_index].fscore = Distance(current[paths].Neighbours[_index].Location) + gscore;\n        map[current[paths].Neighbours[_index].ID].fscore = current[paths].Neighbours[_index].fscore;\n\n        if (map[current[paths].Neighbours[_index].ID].fscore < current[paths].fscore) {\n          OpenSet.push(map[current[paths].Neighbours[_index].ID]);\n          map[current[paths].Neighbours[_index].ID].cameFrom = current[paths].ID;\n        }\n      }\n    }\n\n    var min = null;\n    var id = null;\n    var Delete = null;\n    console.log(OpenSet);\n    current.splice(0, current.lenght);\n\n    for (var _index2 = 0; _index2 < OpenSet.length; _index2++) {\n      var min = mapSize;\n      var id = null;\n\n      if (min > OpenSet[_index2].fscore) {\n        min = OpenSet[_index2].fscore;\n        id = OpenSet[_index2].ID;\n        Delete = _index2;\n        current.push(map[id]);\n      }\n    }\n\n    OpenSet.splice(Delete, 1);\n  } while (JSON.stringify(current.Location) != JSON.stringify(end));\n}\n\nfunction trail() {\n  var trailPath = null;\n  var past = true;\n  map[0].trail = true;\n\n  do {\n    if (trailPath == null) {\n      for (var index = 0; index < map.length; index++) {\n        if (JSON.stringify(map[index].Location) == JSON.stringify(end)) {\n          trailPath = map[index];\n          trailPath.trail = true;\n        }\n      }\n    }\n\n    if (trailPath.cameFrom == 0) {\n      past = false;\n    } else {\n      trailPath = map[trailPath.cameFrom];\n      trailPath.trail = true;\n    }\n  } while (past != false);\n}\n\nfunction cell(nx, ny, random, idnum) {\n  var ID = idnum;\n  var cameFrom = 0;\n  var x = nx;\n  var y = ny;\n  var loc = [x, y];\n  var fscore = 0;\n  var gscore = 0;\n  var wall = wallorNot(random, loc);\n  var blocks = [];\n  var trail = false;\n  return {\n    'x': x,\n    'y': y,\n    'wall': wall,\n    'Neighbours': blocks,\n    'Location': loc,\n    'fscore': fscore,\n    'gscore': gscore,\n    'ID': ID,\n    'cameFrom': cameFrom,\n    'trail': trail\n  };\n}\n\nfunction Neighbours(x, y, id) {\n  var NL = [];\n\n  if (y > 0) {\n    if (map[id - xSize].wall != true) {\n      NL.push(map[id - xSize]);\n    }\n  }\n\n  if (y < ySize - 1) {\n    if (map[id + xSize].wall != true) {\n      NL.push(map[id + xSize]);\n    }\n  }\n\n  if (x > 0) {\n    if (map[id - 1].wall != true) {\n      NL.push(map[id - 1]);\n    }\n  }\n\n  if (x < xSize - 1) {\n    if (map[id + 1].wall != true) {\n      NL.push(map[id + 1]);\n    }\n  }\n\n  return NL;\n}\n\nfunction wallorNot(random, loc) {\n  if (JSON.stringify(loc) == JSON.stringify(start) || JSON.stringify(loc) == JSON.stringify(end)) {\n    return false;\n  } else {\n    if (random > 0.8) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nfunction Mapinit() {\n  var num = 0;\n\n  for (var y = 0; y < ySize; y++) {\n    for (var x = 0; x < xSize; x++) {\n      var randomnum = Math.random();\n      map.push(cell(x, y, randomnum, num));\n      console.log(randomnum);\n      num++;\n    }\n  }\n}\n\nfunction drawmap(item) {\n  var blockstyle;\n\n  if (item.trail == true) {\n    blockstyle = styles.Trail;\n  }\n\n  if (!item.wall) {\n    if (item.trail == true) {\n      blockstyle = styles.Trail;\n    } else {\n      blockstyle = styles.mapfree;\n    }\n  } else {\n    blockstyle = styles.mapblock;\n  }\n\n  return blockstyle;\n}\n\nfunction Distance(location) {\n  return Math.abs(location[0] - end[0]) + Math.abs(location[1] - end[1]);\n}","map":{"version":3,"sources":["C:/reactnativeapps/AI/App.js"],"names":["StatusBar","React","useState","useEffect","Component","DrawerLayoutAndroidComponent","styles","map","OpenSet","ClosedSet","xSize","ySize","mapSize","start","end","UltimateCurrent","testi","app","props","handleUpdate","aStar","trail","setState","movecount","state","bind","Mapinit","push","console","log","container","startbutton","item","drawmap","GridViewInsideTextItemStyle","fscore","current","goal","gscore","pahts","paths","length","index","Neighbours","x","y","ID","Distance","Location","cameFrom","min","id","Delete","splice","lenght","JSON","stringify","trailPath","past","cell","nx","ny","random","idnum","loc","wall","wallorNot","blocks","NL","num","randomnum","Math","blockstyle","Trail","mapfree","mapblock","location","abs"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\n\nimport React ,{ useState, useEffect }from 'react';\n\nimport Component from 'react';\n\nimport { DrawerLayoutAndroidComponent, StyleSheet, Text, View, FlatList, Button, Alert } from 'react-native';\n\nimport styles from './styles/Gridstyles';\n\n  const map=[];\n\n  var OpenSet=[];\n  var ClosedSet=[];\n\n  var xSize = 20;\n  var ySize = 20;\n  var mapSize = xSize*ySize;\n\n  var start = [0,0];\n  var end = [xSize-1,ySize-1];\n\n  var UltimateCurrent;\n\nvar testi;\n\nexport default class app extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.state={movecount:0};\n    this.handleUpdate = this.handleUpdate.bind(this);\n    \n    Mapinit();\n    UltimateCurrent.push(map[0]);   \n    console.log(map); \n    console.log(start);\n    console.log(end);\n  }\n\n  handleUpdate = () =>{\n    //do{\n      aStar(UltimateCurrent);\n      trail();\n      this.setState({movecount :this.state.movecount + 1})\n    //}while(JSON.stringify(current.Location)!=JSON.stringify(end))\n  }\n    \n  render(){\n    return(\n    <View style={styles.container}>\n      <Text>{this.state.movecount}</Text>\n      <Button title=\"start\" onPress={this.handleUpdate} style={styles.startbutton}></Button>\n      <FlatList\n        data={map}\n        extraData={this.state.movecount}\n        renderItem={({item}) => <View style={drawmap(item)}>\n          <Text style={styles.GridViewInsideTextItemStyle}>{item.fscore}</Text>            \n        </View>}\n        numColumns={xSize}\n      />\n    </View>\n    );\n  } \n}\n\nfunction aStar(current){\ndo{\n  var goal = false;\n  var gscore = 0;\n\n  for (let pahts = 0; paths < current.length; paths++) {\n\n    for (let index = 0; index < 4; index++) {\n      current[paths].Neighbours = Neighbours(current[paths].x, current[paths].y, current[paths].ID);\n    }\n\n    for (let index = 0; index < current[paths].Neighbours.length; index++) {\n      gscore = current[paths].gscore + 1;\n\n      current[paths].fscore = Distance(current[paths].Location)+gscore;\n      current[paths].Neighbours[index].fscore = Distance(current[paths].Neighbours[index].Location)+gscore;\n\n      map[current[paths].Neighbours[index].ID].fscore = current[paths].Neighbours[index].fscore;\n      if(map[current[paths].Neighbours[index].ID].fscore<current[paths].fscore){\n        OpenSet.push(map[current[paths].Neighbours[index].ID]);\n        map[current[paths].Neighbours[index].ID].cameFrom = current[paths].ID;\n      }\n    }\n  }\n\n  var min = null;\n  var id = null;\n  var Delete = null;\n\n  console.log(OpenSet);\n\n  current.splice(0,current.lenght);\n\n  for (let index = 0; index < OpenSet.length; index++) {\n    var min = mapSize;\n    var id = null;\n    if (min > OpenSet[index].fscore)  {\n      min = OpenSet[index].fscore;\n      id = OpenSet[index].ID;\n      Delete = index;\n      current.push(map[id]);\n    }\n  }\n  OpenSet.splice(Delete,1);\n\n}while(JSON.stringify(current.Location)!=JSON.stringify(end))\n}\n\nfunction trail(){\n\n  var trailPath = null;\n  var past = true;\n\n  map[0].trail = true;\n\n  do{\n    if(trailPath == null){\n      for (let index = 0; index < map.length; index++) {\n        if(JSON.stringify(map[index].Location) == JSON.stringify(end)){\n          trailPath = map[index];\n          trailPath.trail = true;\n        }     \n      }\n    }\n\n    if (trailPath.cameFrom==0){\n      past = false\n    }\n    else{\n      trailPath = map[trailPath.cameFrom];\n      trailPath.trail = true;\n    }\n\n  }while(past != false)\n}\n\nfunction cell(nx,ny,random,idnum){\n\n  let ID = idnum;\n  let cameFrom = 0;\n  let x = nx;\n  let y = ny;\n  let loc = [x,y];\n  let fscore = 0;\n  let gscore = 0;\n  let wall = wallorNot(random, loc);\n  var blocks = [];\n  var trail = false;\n  \n  // jatka tästä\n  return {'x':x,'y':y,'wall':wall, 'Neighbours':blocks, 'Location':loc , 'fscore':fscore,'gscore':gscore ,'ID':ID, 'cameFrom':cameFrom,'trail':trail};\n}\n\nfunction Neighbours(x, y, id){\n\n  var NL = [];\n\n  if(y > 0){ // voiko mennä ylös\n    \n    if (map[id-(xSize)].wall != true){\n      NL.push(map[id-(xSize)]);\n    }\n  }\n  if(y < ySize-1){ // voiko mennä alas\n    \n    if (map[id+(xSize)].wall != true){\n      NL.push(map[id+(xSize)]);\n    }\n  }\n  if(x > 0){ // voiko mennä vasemmalle\n    \n    if (map[id-1].wall != true){\n      NL.push(map[id-1]);\n    }\n  }\n  if(x < xSize-1){ // voiko mennä oikealle\n    \n    if (map[id+1].wall != true){\n      NL.push(map[id+1]);\n    }\n  }\n  \n  return NL;\n}\n\nfunction wallorNot(random,loc){\n  if(JSON.stringify(loc)==JSON.stringify(start) || JSON.stringify(loc) == JSON.stringify(end)){\n    return false;\n  }\n  else{\n    if(random>0.8){\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n}\n\nfunction Mapinit(){\n  var num = 0;\n  for (let y = 0; y < ySize; y++) {\n    for (let x = 0; x < xSize; x++) {\n      var randomnum = Math.random();\n      map.push(cell(x,y,randomnum,num));\n      console.log(randomnum);\n      num++\n     }\n  }\n}\n\nfunction drawmap(item){\n  var blockstyle;\n  if (item.trail == true){\n    blockstyle = styles.Trail;\n  }\n  if (!item.wall){\n    if (item.trail == true){\n      blockstyle = styles.Trail;\n    }\n    else{\n    blockstyle = styles.mapfree;\n    }\n  }\n  else{\n    blockstyle = styles.mapblock;\n  }\n  return(blockstyle);\n}\n\nfunction Distance(location){\n  return Math.abs(location[0]-end[0])+Math.abs(location[1]-end[1]); // toimii vain jos aloitus on vasemmassa yläkulmassa\n}"]},"metadata":{},"sourceType":"module"}