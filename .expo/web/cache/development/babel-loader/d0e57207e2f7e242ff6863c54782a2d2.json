{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\reactnativeapps\\\\AI\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport Component from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport styles from \"./styles/Gridstyles\";\nvar map = [];\nvar OpenSet = [];\nvar ClosedSet = [];\nvar xSize = 20;\nvar ySize = 20;\nvar mapSize = xSize * ySize;\nvar startStop = [];\nvar start = startStop[0].loc;\nvar end = startStop[1].loc;\nvar startID = startStop[0].ID;\nvar endID = startStop[1].ID;\nvar last;\nvar UltimateCurrent = [];\nvar goal = false;\nvar testi;\n\nvar app = function (_React$Component) {\n  _inherits(app, _React$Component);\n\n  var _super = _createSuper(app);\n\n  function app(props) {\n    var _this;\n\n    _classCallCheck(this, app);\n\n    _this = _super.call(this, props);\n\n    _this.handleUpdate = function () {\n      if (goal == true) {\n        map.splice(0, map.length);\n        Mapinit();\n        UltimateCurrent.push(map[startID]);\n\n        _this.setState({\n          movecount: _this.state.movecount - _this.state.movecount\n        });\n      }\n\n      aStar(UltimateCurrent);\n      trail();\n\n      _this.setState({\n        movecount: _this.state.movecount + 1\n      });\n    };\n\n    _this.navigate = function (id) {\n      if (startStop.length < 2) {\n        startStop.push(map[id]);\n        console.log(startStop);\n        console.log(start);\n      } else {\n        console.log('On jo kaksi');\n      }\n\n      start = startStop[0].loc;\n      end = startStop[1].loc;\n      startID = startStop[0].ID;\n      endID = startStop[1].ID;\n    };\n\n    _this.state = {\n      movecount: 0\n    };\n    _this.handleUpdate = _this.handleUpdate.bind(_assertThisInitialized(_this));\n    _this.navigate = _this.navigate.bind(_assertThisInitialized(_this));\n    Mapinit();\n    return _this;\n  }\n\n  _createClass(app, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 5\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      }, this.state.movecount), React.createElement(Button, {\n        title: \"try\",\n        onPress: this.handleUpdate,\n        style: styles.startbutton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }\n      }), React.createElement(FlatList, {\n        data: map,\n        extraData: this.state.movecount,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(View, {\n            style: drawmap(item),\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }\n          }, React.createElement(TouchableOpacity, {\n            style: styles.button,\n            onPress: function onPress() {\n              _this2.navigate(item.ID);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 11\n            }\n          }, React.createElement(Text, {\n            style: styles.GridViewInsideTextItemStyle,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 13\n            }\n          }, item.fscore)));\n        },\n        numColumns: xSize,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return app;\n}(React.Component);\n\nexport { app as default };\n\nfunction aStar(current) {\n  do {\n    goal = false;\n    var gscore = 0;\n\n    for (var paths = 0; paths < current.length; paths++) {\n      for (var index = 0; index < 4; index++) {\n        current[paths].Neighbours = Neighbours(current[paths].x, current[paths].y, current[paths].ID);\n      }\n\n      for (var _index = 0; _index < current[paths].Neighbours.length; _index++) {\n        gscore = current[paths].gscore + 1;\n        current[paths].fscore = Distance(current[paths].Location) + gscore;\n        current[paths].Neighbours[_index].fscore = Distance(current[paths].Neighbours[_index].Location) + gscore;\n        map[current[paths].Neighbours[_index].ID].fscore = current[paths].Neighbours[_index].fscore;\n        console.log(map[current[paths].Neighbours[_index].ID].fscore + \"Tämä voin olla\");\n        console.log(current[paths].fscore + \"Tämä olen\");\n\n        if (map[current[paths].Neighbours[_index].ID].fscore < current[paths].fscore) {\n          OpenSet.push(map[current[paths].Neighbours[_index].ID]);\n          console.log(map[current[paths].Neighbours[_index].ID].fscore + \"Tämän tallensin\");\n          map[current[paths].Neighbours[_index].ID].cameFrom = current[paths].ID;\n        }\n      }\n    }\n\n    for (var _index2 = 0; _index2 < OpenSet.length; _index2++) {\n      console.log(OpenSet[_index2].Location);\n    }\n\n    var min = null;\n    var id = null;\n    var Delete = null;\n    var min = xSize * ySize - 1;\n\n    for (var _index3 = 0; _index3 < OpenSet.length; _index3++) {\n      var id = null;\n\n      if (min > OpenSet[_index3].fscore) {\n        min = OpenSet[_index3].fscore;\n        id = OpenSet[_index3].ID;\n        Delete = _index3;\n      }\n    }\n\n    for (var _index4 = 0; _index4 < current.length; _index4++) {\n      if (JSON.stringify(current[_index4].Location) == JSON.stringify(end)) {\n        goal = true;\n      }\n    }\n\n    last = current[0].Location;\n\n    if (OpenSet.length == 0) {\n      goal = true;\n    }\n\n    var cf = current[0].fscore;\n    current.splice(0, current.length);\n\n    for (var _index5 = 0; _index5 < OpenSet.length; _index5++) {\n      if (OpenSet[_index5].fscore < cf) {\n        current.push(map[OpenSet[_index5].ID]);\n      }\n    }\n\n    OpenSet.splice(0, OpenSet.length);\n  } while (goal != true);\n}\n\nfunction trail() {\n  var trailPath = null;\n  var past = true;\n  map[startID].trail = true;\n\n  do {\n    if (trailPath == null) {\n      for (var index = 0; index < map.length; index++) {\n        if (JSON.stringify(map[index].Location) == JSON.stringify(last)) {\n          trailPath = map[index];\n          trailPath.trail = true;\n        }\n      }\n    }\n\n    if (trailPath.cameFrom == 0) {\n      past = false;\n    } else {\n      trailPath = map[trailPath.cameFrom];\n      trailPath.trail = true;\n    }\n  } while (past != false);\n}\n\nfunction DoesInclude(id) {\n  var already = false;\n\n  for (var index = 0; index < OpenSet.length; index++) {\n    if (OpenSet[index].ID == id) {\n      already = true;\n      console.log(\"tarkistetaan on duplicatee\");\n      console.log(OpenSet[index].ID);\n      console.log(id);\n    }\n  }\n\n  return already;\n}\n\nfunction cell(nx, ny, random, idnum) {\n  var ID = idnum;\n  var cameFrom = 0;\n  var x = nx;\n  var y = ny;\n  var loc = [x, y];\n  var fscore = 0;\n  var gscore = 0;\n  var wall = wallorNot(random, loc);\n  var blocks = [];\n  var trail = false;\n  return {\n    'x': x,\n    'y': y,\n    'wall': wall,\n    'Neighbours': blocks,\n    'Location': loc,\n    'fscore': fscore,\n    'gscore': gscore,\n    'ID': ID,\n    'cameFrom': cameFrom,\n    'trail': trail\n  };\n}\n\nfunction Neighbours(x, y, id) {\n  var NL = [];\n\n  if (y > 0) {\n    if (map[id - xSize].wall != true) {\n      NL.push(map[id - xSize]);\n    }\n  }\n\n  if (y < ySize - 1) {\n    if (map[id + xSize].wall != true) {\n      NL.push(map[id + xSize]);\n    }\n  }\n\n  if (x > 0) {\n    if (map[id - 1].wall != true) {\n      NL.push(map[id - 1]);\n    }\n  }\n\n  if (x < xSize - 1) {\n    if (map[id + 1].wall != true) {\n      NL.push(map[id + 1]);\n    }\n  }\n\n  for (var _x = 0; _x < OpenSet.length; _x++) {\n    for (var _y = 0; _y < NL.length; _y++) {\n      if (OpenSet[_x].ID == NL[_y].ID) {\n        NL.splice(_y, 1);\n      }\n    }\n  }\n\n  return NL;\n}\n\nfunction wallorNot(random, loc) {\n  if (JSON.stringify(loc) == JSON.stringify(start) || JSON.stringify(loc) == JSON.stringify(end)) {\n    return false;\n  } else {\n    if (random > 0.8) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nfunction Mapinit() {\n  var num = 0;\n\n  for (var y = 0; y < ySize; y++) {\n    for (var x = 0; x < xSize; x++) {\n      var randomnum = Math.random();\n      map.push(cell(x, y, randomnum, num));\n      num++;\n    }\n  }\n}\n\nfunction drawmap(item) {\n  var blockstyle;\n\n  if (item.trail == true) {\n    blockstyle = styles.Trail;\n  }\n\n  if (!item.wall) {\n    if (item.trail == true) {\n      blockstyle = styles.Trail;\n    } else {\n      blockstyle = styles.mapfree;\n    }\n  } else {\n    blockstyle = styles.mapblock;\n  }\n\n  return blockstyle;\n}\n\nfunction Distance(location) {\n  return Math.abs(location[0] - end[0]) + Math.abs(location[1] - end[1]);\n}","map":{"version":3,"sources":["C:/reactnativeapps/AI/App.js"],"names":["StatusBar","React","useState","useEffect","Component","styles","map","OpenSet","ClosedSet","xSize","ySize","mapSize","startStop","start","loc","end","startID","ID","endID","last","UltimateCurrent","goal","testi","app","props","handleUpdate","splice","length","Mapinit","push","setState","movecount","state","aStar","trail","navigate","id","console","log","bind","container","startbutton","item","drawmap","button","GridViewInsideTextItemStyle","fscore","current","gscore","paths","index","Neighbours","x","y","Distance","Location","cameFrom","min","Delete","JSON","stringify","cf","trailPath","past","DoesInclude","already","cell","nx","ny","random","idnum","wall","wallorNot","blocks","NL","num","randomnum","Math","blockstyle","Trail","mapfree","mapblock","location","abs"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\n\nimport React ,{ useState, useEffect }from 'react';\n\nimport Component from 'react';\n\nimport {TouchableOpacity, Text, View, FlatList, Button } from 'react-native';\n\nimport styles from './styles/Gridstyles';\n\nconst map=[];\n\nvar OpenSet=[];\nvar ClosedSet=[];\n\nvar xSize = 20;\nvar ySize = 20;\nvar mapSize = xSize*ySize;\n\nvar startStop = [];\n\n// var start = [0,0];\n// var end = [xSize-1,ySize-1];\n\nvar start = startStop[0].loc;\nvar end = startStop[1].loc;\n\nvar startID = startStop[0].ID;\nvar endID = startStop[1].ID;\n\nvar last;\n\nvar UltimateCurrent = [];\n\nvar goal = false;\n\n\nvar testi;\n\nexport default class app extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.state={movecount:0};\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.navigate = this.navigate.bind(this);\n    \n    Mapinit(); \n  }\n\n  handleUpdate = () =>{\n    if (goal == true){\n      map.splice(0,map.length);\n      Mapinit();\n      UltimateCurrent.push(map[startID]);\n      this.setState({movecount :this.state.movecount - this.state.movecount}) \n    }\n\n    aStar(UltimateCurrent);\n    trail();\n    this.setState({movecount :this.state.movecount + 1})    \n  }\n\n  navigate = (id) =>{\n    if(startStop.length < 2){\n      startStop.push(map[id]);\n      console.log(startStop);\n      console.log(start);\n    }\n    else{\n      console.log('On jo kaksi');\n    }\n\n    start = startStop[0].loc;\n    end = startStop[1].loc;\n\n    startID = startStop[0].ID;\n    endID = startStop[1].ID;\n  }\n    \n  render(){\n    return(\n    <View style={styles.container}>\n      <Text>{this.state.movecount}</Text>\n      <Button title=\"try\" onPress={this.handleUpdate} style={styles.startbutton}></Button>\n      <FlatList\n        data={map}\n        extraData={this.state.movecount}\n        renderItem={({item}) => <View style={drawmap(item)}>\n          <TouchableOpacity style={styles.button} onPress={()=>{this.navigate(item.ID)}}>\n            <Text style={styles.GridViewInsideTextItemStyle}>{item.fscore}</Text>\n          </TouchableOpacity>            \n        </View>}\n        numColumns={xSize}\n      />\n    </View>\n    );\n  } \n}\n\nfunction aStar(current){\ndo{\n  goal = false;\n  var gscore = 0;\n\n  for (let paths = 0; paths < current.length; paths++) {\n\n    for (let index = 0; index < 4; index++) {\n      current[paths].Neighbours = Neighbours(current[paths].x, current[paths].y, current[paths].ID);\n    }\n\n    for (let index = 0; index < current[paths].Neighbours.length; index++) {\n      gscore = current[paths].gscore + 1;\n\n      current[paths].fscore = Distance(current[paths].Location)+gscore;\n      current[paths].Neighbours[index].fscore = Distance(current[paths].Neighbours[index].Location)+gscore;\n\n      map[current[paths].Neighbours[index].ID].fscore = current[paths].Neighbours[index].fscore;\n      console.log(map[current[paths].Neighbours[index].ID].fscore+\"Tämä voin olla\");\n      console.log(current[paths].fscore+\"Tämä olen\");\n\n      if(map[current[paths].Neighbours[index].ID].fscore<current[paths].fscore){\n        OpenSet.push(map[current[paths].Neighbours[index].ID]);\n        console.log(map[current[paths].Neighbours[index].ID].fscore+\"Tämän tallensin\");\n        map[current[paths].Neighbours[index].ID].cameFrom = current[paths].ID;\n      }\n    }\n  }\n\n  for (let index = 0; index < OpenSet.length; index++) {\n    console.log(OpenSet[index].Location);\n  }\n\n  var min = null;\n  var id = null;\n  var Delete = null;\n\n  var min = xSize*ySize-1;\n  for (let index = 0; index < OpenSet.length; index++) {\n    var id = null;\n    if (min > OpenSet[index].fscore)  {\n      min = OpenSet[index].fscore;\n      id = OpenSet[index].ID;\n      Delete = index;\n    }\n  }\n\n\n  for (let index = 0; index < current.length; index++) {\n    if(JSON.stringify(current[index].Location)==JSON.stringify(end)){\n      goal = true;\n    }  \n  }\n\n  last = current[0].Location;\n  if (OpenSet.length==0){\n     goal = true;\n  }\n\n \n  var cf = current[0].fscore;\n  current.splice(0,current.length);\n\n  for (let index = 0; index < OpenSet.length; index++) {\n    if(OpenSet[index].fscore<cf){\n    current.push(map[OpenSet[index].ID]);\n    }\n  }\n  \n  OpenSet.splice(0,OpenSet.length);\n\n}while(goal!=true)//(JSON.stringify(current.Location)!=JSON.stringify(end))\n}\n\nfunction trail(){\n\n  var trailPath = null;\n  var past = true;\n\n  map[startID].trail = true; // värjää aloituksen reitiksi\n\n  do{\n    if(trailPath == null){\n      for (let index = 0; index < map.length; index++) {\n        if(JSON.stringify(map[index].Location) == JSON.stringify(last)){\n          trailPath = map[index];\n          trailPath.trail = true;\n        }     \n      }\n    }\n\n    if (trailPath.cameFrom==0){\n      past = false\n    }\n    else{\n      trailPath = map[trailPath.cameFrom];\n      trailPath.trail = true;\n    }\n\n  }while(past != false)\n}\n\nfunction DoesInclude(id){\n  var already = false;\n  for (let index = 0; index < OpenSet.length; index++) {\n    if(OpenSet[index].ID == id){\n      already = true;\n      console.log(\"tarkistetaan on duplicatee\");\n      console.log(OpenSet[index].ID);\n      console.log(id);\n    }\n  }\n  return already;\n}\n\nfunction cell(nx,ny,random,idnum){\n\n  let ID = idnum;\n  let cameFrom = 0;\n  let x = nx;\n  let y = ny;\n  let loc = [x,y];\n  let fscore = 0;\n  let gscore = 0;\n  let wall = wallorNot(random, loc);\n  var blocks = [];\n  var trail = false;\n  \n  // jatka tästä\n  return {'x':x,'y':y,'wall':wall, 'Neighbours':blocks, 'Location':loc , 'fscore':fscore,'gscore':gscore ,'ID':ID, 'cameFrom':cameFrom,'trail':trail};\n}\n\nfunction Neighbours(x, y, id){\n\n  var NL = [];\n\n  if(y > 0){ // voiko mennä ylös\n    \n    if (map[id-(xSize)].wall != true){\n      NL.push(map[id-(xSize)]);\n    }\n  }\n  if(y < ySize-1){ // voiko mennä alas\n    \n    if (map[id+(xSize)].wall != true){\n      NL.push(map[id+(xSize)]);\n    }\n  }\n  if(x > 0){ // voiko mennä vasemmalle\n    \n    if (map[id-1].wall != true){\n      NL.push(map[id-1]);\n    }\n  }\n  if(x < xSize-1){ // voiko mennä oikealle\n    \n    if (map[id+1].wall != true){\n      NL.push(map[id+1]);\n    }\n  }\n  \n  for (let x = 0; x < OpenSet.length; x++) {\n    for (let y = 0; y < NL.length; y++) {\n      if (OpenSet[x].ID == NL[y].ID){\n        NL.splice(y,1);\n      }\n      \n    }\n  }\n  \n  return NL;\n}\n\nfunction wallorNot(random,loc){\n  if(JSON.stringify(loc)==JSON.stringify(start) || JSON.stringify(loc) == JSON.stringify(end)){\n    return false;\n  }\n  else{\n    if(random>0.8){\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n}\n\nfunction Mapinit(){\n  var num = 0;\n  for (let y = 0; y < ySize; y++) {\n    for (let x = 0; x < xSize; x++) {\n      var randomnum = Math.random();\n      map.push(cell(x,y,randomnum,num));\n      num++\n     }\n  }\n}\n\nfunction drawmap(item){\n  var blockstyle;\n  if (item.trail == true){\n    blockstyle = styles.Trail;\n  }\n  if (!item.wall){\n    if (item.trail == true){\n      blockstyle = styles.Trail;\n    }\n    else{\n    blockstyle = styles.mapfree;\n    }\n  }\n  else{\n    blockstyle = styles.mapblock;\n  }\n  return(blockstyle);\n}\n\nfunction Distance(location){\n  return Math.abs(location[0]-end[0])+Math.abs(location[1]-end[1]); // toimii vain jos aloitus on vasemmassa yläkulmassa\n}"]},"metadata":{},"sourceType":"module"}