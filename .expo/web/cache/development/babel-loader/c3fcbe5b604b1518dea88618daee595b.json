{"ast":null,"code":"var _jsxFileName = \"c:\\\\reactnativeapps\\\\AI\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { DrawerLayoutAndroidComponent } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nvar blocks = [];\nvar newMap = [];\nvar moveValues = [];\nvar edgenums = [];\nvar xSize = 5;\nvar ySize = 5;\nvar mapSize = xSize * ySize;\nvar dir = [];\nexport default function App() {\n  var _this = this;\n\n  Mapinit();\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"LOL t\\xE4\\xE4 toimii\"), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: newMap,\n    extraData: newMap,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: drawmap(item),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: styles.GridViewInsideTextItemStyle,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, item.numv));\n    },\n    numColumns: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction MoveWorm() {\n  var loc = 1;\n\n  do {} while (loc != mapSize);\n}\n\nfunction DistanceToEnd(loc) {\n  var distance;\n\n  switch (loc) {\n    case loc < 6:\n      distance = loc - 5 + 4;\n      break;\n\n    case loc < 11:\n      distance = loc - 10 + 3;\n      break;\n\n    case loc < 16:\n      distance = loc - 15 + 2;\n      break;\n\n    case loc < 21:\n      distance = loc - 20 + 1;\n      break;\n\n    case loc < 26:\n      distance = loc - 25 + 0;\n      break;\n  }\n\n  return distance;\n}\n\nfunction bestmove(loc) {\n  moves(loc);\n\n  for (var index = 0; index < dir.length; index++) {\n    var value = 25 - DistanceToEnd(dir[index]);\n\n    if (blocks.includes(dir[index])) {\n      value = 0;\n    }\n\n    moveValues.push(value);\n  }\n}\n\nfunction moves(loc) {\n  var down = loc + xSize;\n  var up = loc - xSize;\n  var left = loc - 1;\n  var right = loc + 1;\n  dir.unshift(up, down, left, right);\n}\n\nfunction Mapinit() {\n  var blockobjectcount = 5;\n\n  for (var index = 0; index < blockobjectcount; index++) {\n    var randomnum = Math.floor(Math.random() * mapSize) + 1;\n\n    if (randomnum == 1) {\n      randomnum = randomnum + 1;\n    } else if (randomnum == mapSize) {\n      randomnum = randomnum - 1;\n    }\n\n    blocks.push(randomnum);\n  }\n\n  for (var _index = 0; _index < mapSize; _index++) {\n    var blocknum = _index + 1;\n\n    if (blocks.includes(blocknum)) {\n      newMap.push({\n        numv: _index + 1,\n        func: 'block'\n      });\n    } else if (blocknum < xSize || blocknum % ySize == 0 || blocknum % ySize == 1 || blocknum > mapSize - xSize) {\n      edgenums.push(blocknum);\n      newMap.push({\n        numv: _index + 1,\n        func: 'free'\n      });\n    } else {\n      newMap.push({\n        numv: _index + 1,\n        func: 'free'\n      });\n    }\n  }\n}\n\nfunction listwithzeros(size) {\n  var element = [];\n\n  for (var index = 0; index < size; index++) {\n    element.push(0);\n  }\n\n  return element;\n}\n\nfunction drawmap(item) {\n  var blockstyle;\n\n  if (item.func == 'block') {\n    blockstyle = styles.mapblock;\n  } else if (item.func == 'worm') {\n    blockstyle = styles.mapworm;\n  } else {\n    blockstyle = styles.mapfree;\n  }\n\n  return blockstyle;\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  mapfree: {\n    justifyContent: 'center',\n    flex: 1,\n    alignItems: 'center',\n    height: 50,\n    width: 50,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'white'\n  },\n  mapblock: {\n    justifyContent: 'center',\n    flex: 1,\n    alignItems: 'center',\n    height: 50,\n    width: 50,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'red'\n  },\n  mapworm: {\n    justifyContent: 'center',\n    flex: 1,\n    alignItems: 'center',\n    height: 50,\n    width: 50,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'blue'\n  },\n  GridViewInsideTextItemStyle: {\n    color: '#fff',\n    fontSize: 18,\n    color: \"black\",\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["c:/reactnativeapps/AI/App.js"],"names":["StatusBar","React","DrawerLayoutAndroidComponent","blocks","newMap","moveValues","edgenums","xSize","ySize","mapSize","dir","App","Mapinit","styles","container","item","drawmap","GridViewInsideTextItemStyle","numv","MoveWorm","loc","DistanceToEnd","distance","bestmove","moves","index","length","value","includes","push","down","up","left","right","unshift","blockobjectcount","randomnum","Math","floor","random","blocknum","func","listwithzeros","size","element","blockstyle","mapblock","mapworm","mapfree","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","height","width","borderWidth","borderColor","color","fontSize"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { DrawerLayoutAndroidComponent, StyleSheet, Text, View, FlatList } from 'react-native';\n\n  const blocks=[];\n  const newMap=[];\n  const moveValues=[];\n  const edgenums=[];\n  var xSize = 5;\n  var ySize = 5;\n  var mapSize = xSize*ySize;\n  const dir = [];\n\n\nexport default function App() {\n\n  Mapinit();\n\n  return (\n    <View style={styles.container}>\n      <Text>LOL tää toimii</Text>\n      <StatusBar style=\"auto\" />\n      <FlatList\n        data={newMap}\n        extraData={newMap}\n        renderItem={({item}) => <View style={drawmap(item)}>\n          <Text style={styles.GridViewInsideTextItemStyle}>{item.numv}</Text>            \n        </View>}\n        numColumns={5}\n      />\n    </View>\n  );\n}\n\nfunction MoveWorm(){\n  var loc = 1;\n  do{\n    \n  }while(loc != mapSize)\n}\n\nfunction DistanceToEnd(loc){\n  var distance;\n  switch (loc) {\n    case loc<6:\n      distance = (loc - 5)+4;\n      break;\n    case loc<11:\n      distance = (loc - 10)+3;\n      break;\n    case loc<16:\n      distance = (loc - 15)+2;\n      break;\n    case loc<21:\n      distance = (loc - 20)+1;\n      break;\n    case loc<26:\n      distance = (loc - 25)+0;\n      break;\n  }\n\n  return(\n    distance\n  )\n}\n\nfunction bestmove(loc){\n  moves(loc)\n\n  for (let index = 0; index < dir.length; index++) {\n    var value = 25 - DistanceToEnd(dir[index]);\n    if (blocks.includes(dir[index])){\n      value = 0;\n    }\n    moveValues.push(value);\n  }\n}\n\nfunction moves(loc){\n  var down = loc + xSize;\n  var up = loc - xSize;\n  var left = loc - 1;\n  var right = loc + 1;\n  dir.unshift(up,down,left,right);\n}\n\nfunction Mapinit(){\n  var blockobjectcount = 5;\n\n  for (let index = 0; index < blockobjectcount; index++) {\n    var randomnum = Math.floor(Math.random() * mapSize) + 1\n    if (randomnum == 1){\n      randomnum = randomnum + 1;\n    }\n    else if (randomnum == mapSize){\n      randomnum = randomnum - 1;\n    }\n    blocks.push(randomnum);   \n  }\n  \n  for (let index = 0; index < mapSize; index++) {\n    var blocknum = index+1;\n    if(blocks.includes(blocknum)){\n      newMap.push({numv:index+1, func:'block'})\n    }\n    else if (blocknum < xSize || blocknum%ySize == 0 || blocknum%ySize == 1 || blocknum > mapSize-xSize){\n      edgenums.push(blocknum)\n      newMap.push({numv:index+1, func:'free'})\n    }\n    else{\n      newMap.push({numv:index+1, func:'free'})\n    }\n  }\n}\n\nfunction listwithzeros(size){\n  const element = [];\n  for (let index = 0; index < size; index++) {\n    element.push(0);\n  }\n\n  return(element);\n}\n\nfunction drawmap(item){\n   var blockstyle;\n\n  if (item.func == 'block'){\n    blockstyle = styles.mapblock;\n  }\n  else if (item.func == 'worm'){\n    blockstyle = styles.mapworm;\n  }\n  else{\n    blockstyle = styles.mapfree;\n  }\n  return(blockstyle);\n}\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  mapfree: {\n    justifyContent: 'center',\n    flex:1,\n    alignItems: 'center',\n    height: 50,\n    width: 50,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'white'\n  },\n\n  mapblock: {\n    justifyContent: 'center',\n    flex:1,\n    alignItems: 'center',\n    height: 50,\n    width: 50,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'red'\n  },\n\n  mapworm: {\n    justifyContent: 'center',\n    flex:1,\n    alignItems: 'center',\n    height: 50,\n    width: 50,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'blue'\n  },\n \n  GridViewInsideTextItemStyle: {\n \n   color: '#fff',\n   fontSize: 18,\n   color: \"black\",\n   justifyContent: 'center',\n   \n },\n});\n"]},"metadata":{},"sourceType":"module"}