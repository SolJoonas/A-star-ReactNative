{"ast":null,"code":"var _jsxFileName = \"c:\\\\reactnativeapps\\\\AI\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { DrawerLayoutAndroidComponent } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nvar blocks = [];\nvar newMap = [];\nvar moveValues = [];\nvar edgenums = [];\nvar xSize = 5;\nvar ySize = 5;\nvar mapSize = xSize * ySize;\nvar dir = [];\nexport default function App() {\n  var _this = this;\n\n  Mapinit();\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"LOL t\\xE4\\xE4 toimii\"), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: MoveWorm,\n    style: styles.startbutton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Start\"), React.createElement(FlatList, {\n    data: newMap,\n    extraData: newMap,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: drawmap(item),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: styles.GridViewInsideTextItemStyle,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }, item.numv));\n    },\n    numColumns: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction MoveWorm() {\n  var loc = 1;\n\n  do {\n    bestmove(loc);\n    var bestdir = direction(dir.indexOf(Math.max.apply(null, array)));\n\n    switch (bestdir) {\n      case 'up':\n        loc - xSize;\n        break;\n\n      case 'down':\n        loc + xSize;\n        break;\n\n      case 'left':\n        loc - 1;\n        break;\n\n      case 'right':\n        loc + 1;\n        break;\n    }\n\n    newMap[loc] = {\n      numv: loc,\n      func: 'worm'\n    };\n  } while (loc != mapSize);\n}\n\nfunction DistanceToEnd(loc) {\n  var distance;\n\n  switch (loc) {\n    case loc < 6:\n      distance = loc - 5 + 4;\n      break;\n\n    case loc < 11:\n      distance = loc - 10 + 3;\n      break;\n\n    case loc < 16:\n      distance = loc - 15 + 2;\n      break;\n\n    case loc < 21:\n      distance = loc - 20 + 1;\n      break;\n\n    case loc < 26:\n      distance = loc - 25 + 0;\n      break;\n  }\n\n  return distance;\n}\n\nfunction bestmove(loc) {\n  moves(loc);\n\n  for (var index = 0; index < dir.length; index++) {\n    var value = 25 - DistanceToEnd(dir[index]);\n\n    if (blocks.includes(dir[index])) {\n      value = 0;\n    } else if (index == 0 && loc < xSize) {\n      value = 0;\n    } else if (index == 3 && loc % ySize == 0) {\n      value = 0;\n    } else if (index == 2 && loc % ySize == 1) {\n      value = 0;\n    } else if (index == 0 && loc > mapSize - xSize) {\n      value = 0;\n    }\n\n    moveValues.push(value);\n  }\n}\n\nfunction direction(index) {\n  var basicdir = ['up', 'down', 'left', 'right'];\n  return basicdir[index];\n}\n\nfunction moves(loc) {\n  var down = loc + xSize;\n  var up = loc - xSize;\n  var left = loc - 1;\n  var right = loc + 1;\n  dir.unshift(up, down, left, right);\n}\n\nfunction Mapinit() {\n  var blockobjectcount = 5;\n\n  for (var index = 0; index < blockobjectcount; index++) {\n    var randomnum = Math.floor(Math.random() * mapSize) + 1;\n\n    if (randomnum == 1) {\n      randomnum = randomnum + 1;\n    } else if (randomnum == mapSize) {\n      randomnum = randomnum - 1;\n    }\n\n    blocks.push(randomnum);\n  }\n\n  for (var _index = 0; _index < mapSize; _index++) {\n    var blocknum = _index + 1;\n\n    if (blocks.includes(blocknum)) {\n      newMap.push({\n        numv: _index + 1,\n        func: 'block'\n      });\n    } else {\n      newMap.push({\n        numv: _index + 1,\n        func: 'free'\n      });\n    }\n  }\n}\n\nfunction drawmap(item) {\n  var blockstyle;\n\n  if (item.func == 'block') {\n    blockstyle = styles.mapblock;\n  } else if (item.func == 'worm') {\n    blockstyle = styles.mapworm;\n  } else {\n    blockstyle = styles.mapfree;\n  }\n\n  return blockstyle;\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  mapfree: {\n    justifyContent: 'center',\n    flex: 1,\n    alignItems: 'center',\n    height: 50,\n    width: 50,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'white'\n  },\n  mapblock: {\n    justifyContent: 'center',\n    flex: 1,\n    alignItems: 'center',\n    height: 50,\n    width: 50,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'red'\n  },\n  mapworm: {\n    justifyContent: 'center',\n    flex: 1,\n    alignItems: 'center',\n    height: 50,\n    width: 50,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'blue'\n  },\n  startbutton: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 50,\n    width: 100,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'blue'\n  },\n  GridViewInsideTextItemStyle: {\n    color: '#fff',\n    fontSize: 18,\n    color: \"black\",\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["c:/reactnativeapps/AI/App.js"],"names":["StatusBar","React","DrawerLayoutAndroidComponent","blocks","newMap","moveValues","edgenums","xSize","ySize","mapSize","dir","App","Mapinit","styles","container","MoveWorm","startbutton","item","drawmap","GridViewInsideTextItemStyle","numv","loc","bestmove","bestdir","direction","indexOf","Math","max","apply","array","func","DistanceToEnd","distance","moves","index","length","value","includes","push","basicdir","down","up","left","right","unshift","blockobjectcount","randomnum","floor","random","blocknum","blockstyle","mapblock","mapworm","mapfree","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","height","width","borderWidth","borderColor","color","fontSize"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { DrawerLayoutAndroidComponent, StyleSheet, Text, View, FlatList, Button } from 'react-native';\n\n  const blocks=[];\n  const newMap=[];\n  const moveValues=[];\n  const edgenums=[];\n  var xSize = 5;\n  var ySize = 5;\n  var mapSize = xSize*ySize;\n  const dir = [];\n\n\nexport default function App() {\n\n  Mapinit();\n\n  return (\n    <View style={styles.container}>\n      <Text>LOL tää toimii</Text>\n      <StatusBar style=\"auto\" />\n      <Button onPress={MoveWorm} style={styles.startbutton}>Start</Button>\n      <FlatList\n        data={newMap}\n        extraData={newMap}\n        renderItem={({item}) => <View style={drawmap(item)}>\n          <Text style={styles.GridViewInsideTextItemStyle}>{item.numv}</Text>            \n        </View>}\n        numColumns={5}\n      />\n    </View>\n  );\n}\n\nfunction MoveWorm(){\n  var loc = 1;\n  do{\n    bestmove(loc);\n\n    var bestdir = direction(dir.indexOf(Math.max.apply(null, array)));\n\n    switch (bestdir) {\n      case 'up': \n        loc - xSize;    \n        break;\n      case 'down':\n        loc + xSize;      \n        break;\n      case 'left':\n        loc - 1;        \n        break;\n      case 'right':\n        loc + 1;        \n        break;\n    }\n\n    newMap[loc] = {numv:loc, func:'worm'}\n\n  }while(loc != mapSize)\n}\n\nfunction DistanceToEnd(loc){\n  var distance;\n  switch (loc) {\n    case loc<6:\n      distance = (loc - 5)+4;\n      break;\n    case loc<11:\n      distance = (loc - 10)+3;\n      break;\n    case loc<16:\n      distance = (loc - 15)+2;\n      break;\n    case loc<21:\n      distance = (loc - 20)+1;\n      break;\n    case loc<26:\n      distance = (loc - 25)+0;\n      break;\n  }\n\n  return(\n    distance\n  )\n}\n\nfunction bestmove(loc){\n  moves(loc)\n\n  for (let index = 0; index < dir.length; index++) {\n    var value = 25 - DistanceToEnd(dir[index]);\n    if (blocks.includes(dir[index])){\n      value = 0;\n    }\n    else if (index == 0 && loc < xSize){\n      value = 0; \n    }\n    else if (index == 3 && loc%ySize == 0){\n      value = 0; \n    }\n    else if (index == 2 && loc%ySize == 1){\n      value = 0; \n    }\n    else if (index == 0 && loc > mapSize-xSize){\n      value = 0;    \n    }\n    moveValues.push(value);\n  }\n}\n\nfunction direction(index){\n  const basicdir = ['up','down','left','right'];\n  return(\n    basicdir[index]\n  )\n}\n\nfunction moves(loc){\n  var down = loc + xSize;\n  var up = loc - xSize;\n  var left = loc - 1;\n  var right = loc + 1;\n  dir.unshift(up,down,left,right);\n}\n\nfunction Mapinit(){\n  var blockobjectcount = 5;\n\n  for (let index = 0; index < blockobjectcount; index++) {\n    var randomnum = Math.floor(Math.random() * mapSize) + 1\n    if (randomnum == 1){\n      randomnum = randomnum + 1;\n    }\n    else if (randomnum == mapSize){\n      randomnum = randomnum - 1;\n    }\n    blocks.push(randomnum);   \n  }\n  \n  for (let index = 0; index < mapSize; index++) {\n    var blocknum = index+1;\n    if(blocks.includes(blocknum)){\n      newMap.push({numv:index+1, func:'block'})\n    }\n    else{\n      newMap.push({numv:index+1, func:'free'})\n    }\n  }\n}\n\n\nfunction drawmap(item){\n   var blockstyle;\n\n  if (item.func == 'block'){\n    blockstyle = styles.mapblock;\n  }\n  else if (item.func == 'worm'){\n    blockstyle = styles.mapworm;\n  }\n  else{\n    blockstyle = styles.mapfree;\n  }\n  return(blockstyle);\n}\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  mapfree: {\n    justifyContent: 'center',\n    flex:1,\n    alignItems: 'center',\n    height: 50,\n    width: 50,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'white'\n  },\n\n  mapblock: {\n    justifyContent: 'center',\n    flex:1,\n    alignItems: 'center',\n    height: 50,\n    width: 50,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'red'\n  },\n\n  mapworm: {\n    justifyContent: 'center',\n    flex:1,\n    alignItems: 'center',\n    height: 50,\n    width: 50,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'blue'\n  },\n\n  startbutton: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 50,\n    width: 100,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'blue'\n  },\n \n  GridViewInsideTextItemStyle: {\n \n   color: '#fff',\n   fontSize: 18,\n   color: \"black\",\n   justifyContent: 'center',\n   \n },\n});\n"]},"metadata":{},"sourceType":"module"}