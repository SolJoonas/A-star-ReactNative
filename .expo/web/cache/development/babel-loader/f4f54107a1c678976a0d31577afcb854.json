{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\reactnativeapps\\\\AI\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport Component from 'react';\nimport { DrawerLayoutAndroidComponent } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport styles from \"./styles/Gridstyles\";\nvar map = [];\nvar OpenSet = [];\nvar ClosedSet = [];\nvar xSize = 20;\nvar ySize = 20;\nvar mapSize = xSize * ySize;\nvar start = [5, 5];\nvar end = [18, 17];\nvar last;\nvar UltimateCurrent = [];\nvar goal = false;\nvar testi;\n\nvar app = function (_React$Component) {\n  _inherits(app, _React$Component);\n\n  var _super = _createSuper(app);\n\n  function app(props) {\n    var _this;\n\n    _classCallCheck(this, app);\n\n    _this = _super.call(this, props);\n\n    _this.handleUpdate = function () {\n      if (goal == true) {\n        map.splice(0, map.length);\n        Mapinit();\n        UltimateCurrent.push(map[42]);\n\n        _this.setState({\n          movecount: _this.state.movecount - _this.state.movecount\n        });\n      }\n\n      aStar(UltimateCurrent);\n      trail();\n\n      _this.setState({\n        movecount: _this.state.movecount + 1\n      });\n    };\n\n    _this.state = {\n      movecount: 0\n    };\n    _this.handleUpdate = _this.handleUpdate.bind(_assertThisInitialized(_this));\n    Mapinit();\n    UltimateCurrent.push(map[42]);\n    return _this;\n  }\n\n  _createClass(app, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 5\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }\n      }, this.state.movecount), React.createElement(Button, {\n        title: \"try\",\n        onPress: this.handleUpdate,\n        style: styles.startbutton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }\n      }), React.createElement(FlatList, {\n        data: map,\n        extraData: this.state.movecount,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(View, {\n            style: drawmap(item),\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }\n          }, React.createElement(TouchableOpacity, {\n            style: styles.button,\n            onPress: onPress,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 11\n            }\n          }, React.createElement(Text, {\n            style: styles.GridViewInsideTextItemStyle,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 11\n            }\n          }, item.fscore)));\n        },\n        numColumns: xSize,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return app;\n}(React.Component);\n\nexport { app as default };\n\nfunction aStar(current) {\n  do {\n    goal = false;\n    var gscore = 0;\n\n    for (var paths = 0; paths < current.length; paths++) {\n      for (var index = 0; index < 4; index++) {\n        current[paths].Neighbours = Neighbours(current[paths].x, current[paths].y, current[paths].ID);\n      }\n\n      for (var _index = 0; _index < current[paths].Neighbours.length; _index++) {\n        gscore = current[paths].gscore + 1;\n        current[paths].fscore = Distance(current[paths].Location) + gscore;\n        current[paths].Neighbours[_index].fscore = Distance(current[paths].Neighbours[_index].Location) + gscore;\n        map[current[paths].Neighbours[_index].ID].fscore = current[paths].Neighbours[_index].fscore;\n        console.log(map[current[paths].Neighbours[_index].ID].fscore + \"Tämä voin olla\");\n        console.log(current[paths].fscore + \"Tämä olen\");\n\n        if (map[current[paths].Neighbours[_index].ID].fscore < current[paths].fscore) {\n          OpenSet.push(map[current[paths].Neighbours[_index].ID]);\n          console.log(map[current[paths].Neighbours[_index].ID].fscore + \"Tämän tallensin\");\n          map[current[paths].Neighbours[_index].ID].cameFrom = current[paths].ID;\n        }\n      }\n    }\n\n    for (var _index2 = 0; _index2 < OpenSet.length; _index2++) {\n      console.log(OpenSet[_index2].Location);\n    }\n\n    var min = null;\n    var id = null;\n    var Delete = null;\n    var min = xSize * ySize - 1;\n\n    for (var _index3 = 0; _index3 < OpenSet.length; _index3++) {\n      var id = null;\n\n      if (min > OpenSet[_index3].fscore) {\n        min = OpenSet[_index3].fscore;\n        id = OpenSet[_index3].ID;\n        Delete = _index3;\n      }\n    }\n\n    for (var _index4 = 0; _index4 < current.length; _index4++) {\n      if (JSON.stringify(current[_index4].Location) == JSON.stringify(end)) {\n        goal = true;\n      }\n    }\n\n    last = current[0].Location;\n\n    if (OpenSet.length == 0) {\n      goal = true;\n    }\n\n    var cf = current[0].fscore;\n    current.splice(0, current.length);\n\n    for (var _index5 = 0; _index5 < OpenSet.length; _index5++) {\n      if (OpenSet[_index5].fscore < cf) {\n        current.push(map[OpenSet[_index5].ID]);\n      }\n    }\n\n    OpenSet.splice(0, OpenSet.length);\n  } while (goal != true);\n}\n\nfunction trail() {\n  var trailPath = null;\n  var past = true;\n  map[0].trail = true;\n\n  do {\n    if (trailPath == null) {\n      for (var index = 0; index < map.length; index++) {\n        if (JSON.stringify(map[index].Location) == JSON.stringify(last)) {\n          trailPath = map[index];\n          trailPath.trail = true;\n        }\n      }\n    }\n\n    if (trailPath.cameFrom == 0) {\n      past = false;\n    } else {\n      trailPath = map[trailPath.cameFrom];\n      trailPath.trail = true;\n    }\n  } while (past != false);\n}\n\nfunction DoesInclude(id) {\n  var already = false;\n\n  for (var index = 0; index < OpenSet.length; index++) {\n    if (OpenSet[index].ID == id) {\n      already = true;\n      console.log(\"tarkistetaan on duplicatee\");\n      console.log(OpenSet[index].ID);\n      console.log(id);\n    }\n  }\n\n  return already;\n}\n\nfunction cell(nx, ny, random, idnum) {\n  var ID = idnum;\n  var cameFrom = 0;\n  var x = nx;\n  var y = ny;\n  var loc = [x, y];\n  var fscore = 0;\n  var gscore = 0;\n  var wall = wallorNot(random, loc);\n  var blocks = [];\n  var trail = false;\n  return {\n    'x': x,\n    'y': y,\n    'wall': wall,\n    'Neighbours': blocks,\n    'Location': loc,\n    'fscore': fscore,\n    'gscore': gscore,\n    'ID': ID,\n    'cameFrom': cameFrom,\n    'trail': trail\n  };\n}\n\nfunction Neighbours(x, y, id) {\n  var NL = [];\n\n  if (y > 0) {\n    if (map[id - xSize].wall != true) {\n      NL.push(map[id - xSize]);\n    }\n  }\n\n  if (y < ySize - 1) {\n    if (map[id + xSize].wall != true) {\n      NL.push(map[id + xSize]);\n    }\n  }\n\n  if (x > 0) {\n    if (map[id - 1].wall != true) {\n      NL.push(map[id - 1]);\n    }\n  }\n\n  if (x < xSize - 1) {\n    if (map[id + 1].wall != true) {\n      NL.push(map[id + 1]);\n    }\n  }\n\n  for (var _x = 0; _x < OpenSet.length; _x++) {\n    for (var _y = 0; _y < NL.length; _y++) {\n      if (OpenSet[_x].ID == NL[_y].ID) {\n        NL.splice(_y, 1);\n      }\n    }\n  }\n\n  return NL;\n}\n\nfunction wallorNot(random, loc) {\n  if (JSON.stringify(loc) == JSON.stringify(start) || JSON.stringify(loc) == JSON.stringify(end)) {\n    return false;\n  } else {\n    if (random > 0.8) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nfunction Mapinit() {\n  var num = 0;\n\n  for (var y = 0; y < ySize; y++) {\n    for (var x = 0; x < xSize; x++) {\n      var randomnum = Math.random();\n      map.push(cell(x, y, randomnum, num));\n      console.log(randomnum);\n      num++;\n    }\n  }\n}\n\nfunction drawmap(item) {\n  var blockstyle;\n\n  if (item.trail == true) {\n    blockstyle = styles.Trail;\n  }\n\n  if (!item.wall) {\n    if (item.trail == true) {\n      blockstyle = styles.Trail;\n    } else {\n      blockstyle = styles.mapfree;\n    }\n  } else {\n    blockstyle = styles.mapblock;\n  }\n\n  return blockstyle;\n}\n\nfunction Distance(location) {\n  return Math.abs(location[0] - end[0]) + Math.abs(location[1] - end[1]);\n}","map":{"version":3,"sources":["C:/reactnativeapps/AI/App.js"],"names":["StatusBar","React","useState","useEffect","Component","DrawerLayoutAndroidComponent","styles","map","OpenSet","ClosedSet","xSize","ySize","mapSize","start","end","last","UltimateCurrent","goal","testi","app","props","handleUpdate","splice","length","Mapinit","push","setState","movecount","state","aStar","trail","bind","container","startbutton","item","drawmap","button","onPress","GridViewInsideTextItemStyle","fscore","current","gscore","paths","index","Neighbours","x","y","ID","Distance","Location","console","log","cameFrom","min","id","Delete","JSON","stringify","cf","trailPath","past","DoesInclude","already","cell","nx","ny","random","idnum","loc","wall","wallorNot","blocks","NL","num","randomnum","Math","blockstyle","Trail","mapfree","mapblock","location","abs"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\n\nimport React ,{ useState, useEffect }from 'react';\n\nimport Component from 'react';\n\nimport { DrawerLayoutAndroidComponent, StyleSheet, Text, View, FlatList, Button, Alert } from 'react-native';\n\nimport styles from './styles/Gridstyles';\n\n  const map=[];\n\n  var OpenSet=[];\n  var ClosedSet=[];\n\n  var xSize = 20;\n  var ySize = 20;\n  var mapSize = xSize*ySize;\n\n  // var start = [0,0];\n  // var end = [xSize-1,ySize-1];\n\n  var start = [5,5];\n  var end = [18,17];\n\n  var last;\n\n  var UltimateCurrent = [];\n\n  var goal = false;\n\n\nvar testi;\n\nexport default class app extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.state={movecount:0};\n    this.handleUpdate = this.handleUpdate.bind(this);\n    \n    Mapinit();\n    UltimateCurrent.push(map[42]);   \n  }\n\n  handleUpdate = () =>{\n    if (goal == true){\n      map.splice(0,map.length);\n      Mapinit();\n      UltimateCurrent.push(map[42]);\n      this.setState({movecount :this.state.movecount - this.state.movecount}) \n    }\n\n    aStar(UltimateCurrent);\n    trail();\n    this.setState({movecount :this.state.movecount + 1})    \n  }\n\n  \n    \n  render(){\n    return(\n    <View style={styles.container}>\n      <Text>{this.state.movecount}</Text>\n      <Button title=\"try\" onPress={this.handleUpdate} style={styles.startbutton}></Button>\n      <FlatList\n        data={map}\n        extraData={this.state.movecount}\n        renderItem={({item}) => <View style={drawmap(item)}>\n          <TouchableOpacity style={styles.button} onPress={onPress}>\n          <Text style={styles.GridViewInsideTextItemStyle}>{item.fscore}</Text>\n          </TouchableOpacity>            \n        </View>}\n        numColumns={xSize}\n      />\n    </View>\n    );\n  } \n}\n\nfunction aStar(current){\ndo{\n  goal = false;\n  var gscore = 0;\n\n  for (let paths = 0; paths < current.length; paths++) {\n\n    for (let index = 0; index < 4; index++) {\n      current[paths].Neighbours = Neighbours(current[paths].x, current[paths].y, current[paths].ID);\n    }\n\n    for (let index = 0; index < current[paths].Neighbours.length; index++) {\n      gscore = current[paths].gscore + 1;\n\n      current[paths].fscore = Distance(current[paths].Location)+gscore;\n      current[paths].Neighbours[index].fscore = Distance(current[paths].Neighbours[index].Location)+gscore;\n\n      map[current[paths].Neighbours[index].ID].fscore = current[paths].Neighbours[index].fscore;\n      console.log(map[current[paths].Neighbours[index].ID].fscore+\"Tämä voin olla\");\n      console.log(current[paths].fscore+\"Tämä olen\");\n\n      if(map[current[paths].Neighbours[index].ID].fscore<current[paths].fscore){\n        OpenSet.push(map[current[paths].Neighbours[index].ID]);\n        console.log(map[current[paths].Neighbours[index].ID].fscore+\"Tämän tallensin\");\n        map[current[paths].Neighbours[index].ID].cameFrom = current[paths].ID;\n      }\n    }\n  }\n\n  for (let index = 0; index < OpenSet.length; index++) {\n    console.log(OpenSet[index].Location);\n  }\n\n  var min = null;\n  var id = null;\n  var Delete = null;\n\n  var min = xSize*ySize-1;\n  for (let index = 0; index < OpenSet.length; index++) {\n    var id = null;\n    if (min > OpenSet[index].fscore)  {\n      min = OpenSet[index].fscore;\n      id = OpenSet[index].ID;\n      Delete = index;\n    }\n  }\n\n\n  for (let index = 0; index < current.length; index++) {\n    if(JSON.stringify(current[index].Location)==JSON.stringify(end)){\n      goal = true;\n    }  \n  }\n\n  last = current[0].Location;\n  if (OpenSet.length==0){\n     goal = true;\n  }\n\n \n  var cf = current[0].fscore;\n  current.splice(0,current.length);\n\n  for (let index = 0; index < OpenSet.length; index++) {\n    if(OpenSet[index].fscore<cf){\n    current.push(map[OpenSet[index].ID]);\n    }\n  }\n  \n  OpenSet.splice(0,OpenSet.length);\n\n}while(goal!=true)//(JSON.stringify(current.Location)!=JSON.stringify(end))\n}\n\nfunction trail(){\n\n  var trailPath = null;\n  var past = true;\n\n  map[0].trail = true; // värjää aloituksen reitiksi\n\n  do{\n    if(trailPath == null){\n      for (let index = 0; index < map.length; index++) {\n        if(JSON.stringify(map[index].Location) == JSON.stringify(last)){\n          trailPath = map[index];\n          trailPath.trail = true;\n        }     \n      }\n    }\n\n    if (trailPath.cameFrom==0){\n      past = false\n    }\n    else{\n      trailPath = map[trailPath.cameFrom];\n      trailPath.trail = true;\n    }\n\n  }while(past != false)\n}\n\nfunction DoesInclude(id){\n  var already = false;\n  for (let index = 0; index < OpenSet.length; index++) {\n    if(OpenSet[index].ID == id){\n      already = true;\n      console.log(\"tarkistetaan on duplicatee\");\n      console.log(OpenSet[index].ID);\n      console.log(id);\n    }\n  }\n  return already;\n}\n\nfunction cell(nx,ny,random,idnum){\n\n  let ID = idnum;\n  let cameFrom = 0;\n  let x = nx;\n  let y = ny;\n  let loc = [x,y];\n  let fscore = 0;\n  let gscore = 0;\n  let wall = wallorNot(random, loc);\n  var blocks = [];\n  var trail = false;\n  \n  // jatka tästä\n  return {'x':x,'y':y,'wall':wall, 'Neighbours':blocks, 'Location':loc , 'fscore':fscore,'gscore':gscore ,'ID':ID, 'cameFrom':cameFrom,'trail':trail};\n}\n\nfunction Neighbours(x, y, id){\n\n  var NL = [];\n\n  if(y > 0){ // voiko mennä ylös\n    \n    if (map[id-(xSize)].wall != true){\n      NL.push(map[id-(xSize)]);\n    }\n  }\n  if(y < ySize-1){ // voiko mennä alas\n    \n    if (map[id+(xSize)].wall != true){\n      NL.push(map[id+(xSize)]);\n    }\n  }\n  if(x > 0){ // voiko mennä vasemmalle\n    \n    if (map[id-1].wall != true){\n      NL.push(map[id-1]);\n    }\n  }\n  if(x < xSize-1){ // voiko mennä oikealle\n    \n    if (map[id+1].wall != true){\n      NL.push(map[id+1]);\n    }\n  }\n  \n  for (let x = 0; x < OpenSet.length; x++) {\n    for (let y = 0; y < NL.length; y++) {\n      if (OpenSet[x].ID == NL[y].ID){\n        NL.splice(y,1);\n      }\n      \n    }\n  }\n  \n  return NL;\n}\n\nfunction wallorNot(random,loc){\n  if(JSON.stringify(loc)==JSON.stringify(start) || JSON.stringify(loc) == JSON.stringify(end)){\n    return false;\n  }\n  else{\n    if(random>0.8){\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n}\n\nfunction Mapinit(){\n  var num = 0;\n  for (let y = 0; y < ySize; y++) {\n    for (let x = 0; x < xSize; x++) {\n      var randomnum = Math.random();\n      map.push(cell(x,y,randomnum,num));\n      console.log(randomnum);\n      num++\n     }\n  }\n}\n\nfunction drawmap(item){\n  var blockstyle;\n  if (item.trail == true){\n    blockstyle = styles.Trail;\n  }\n  if (!item.wall){\n    if (item.trail == true){\n      blockstyle = styles.Trail;\n    }\n    else{\n    blockstyle = styles.mapfree;\n    }\n  }\n  else{\n    blockstyle = styles.mapblock;\n  }\n  return(blockstyle);\n}\n\nfunction Distance(location){\n  return Math.abs(location[0]-end[0])+Math.abs(location[1]-end[1]); // toimii vain jos aloitus on vasemmassa yläkulmassa\n}"]},"metadata":{},"sourceType":"module"}