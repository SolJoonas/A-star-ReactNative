{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\reactnativeapps\\\\AI\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport Component from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport styles from \"./styles/Gridstyles\";\nvar map = [];\nvar OpenSet = [];\nvar ClosedSet = [];\nvar xSize = 5;\nvar ySize = 5;\nvar mapSize = xSize * ySize;\nvar startStop = [];\nvar start = 0;\nvar end = 0;\nvar startID = 0;\nvar endID = 0;\nvar last;\nvar UltimateCurrent = [];\nvar goal = false;\nvar testi;\n\nvar app = function (_React$Component) {\n  _inherits(app, _React$Component);\n\n  var _super = _createSuper(app);\n\n  function app(props) {\n    var _this;\n\n    _classCallCheck(this, app);\n\n    _this = _super.call(this, props);\n\n    _this.handleUpdate = function () {\n      UltimateCurrent.push(map[startID]);\n\n      if (goal == true) {\n        map.splice(0, map.length);\n        startStop.splice(0, startStop.length);\n        Mapinit();\n        UltimateCurrent.push(map[startID]);\n\n        _this.setState({\n          movecount: _this.state.movecount - _this.state.movecount\n        });\n      }\n\n      newHeu();\n      console.log(map);\n\n      _this.setState({\n        movecount: _this.state.movecount + 1\n      });\n    };\n\n    _this.navigate = function (id) {\n      if (startStop.length < 2) {\n        startStop.push(map[id]);\n        console.log(startStop);\n      } else {\n        console.log('On jo kaksi');\n      }\n\n      if (startStop.length > 1) {\n        end = startStop[1].Location;\n        endID = startStop[1].ID;\n      } else {\n        start = startStop[0].Location;\n        startID = startStop[0].ID;\n      }\n\n      console.log(startID);\n      console.log(endID);\n    };\n\n    _this.state = {\n      movecount: 0\n    };\n    _this.handleUpdate = _this.handleUpdate.bind(_assertThisInitialized(_this));\n    _this.navigate = _this.navigate.bind(_assertThisInitialized(_this));\n    Mapinit();\n    return _this;\n  }\n\n  _createClass(app, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 5\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }\n      }, this.state.movecount), React.createElement(Button, {\n        title: \"try\",\n        onPress: this.handleUpdate,\n        style: styles.startbutton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }\n      }), React.createElement(FlatList, {\n        data: map,\n        extraData: this.state.movecount,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(View, {\n            style: drawmap(item),\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }\n          }, React.createElement(TouchableOpacity, {\n            style: styles.button,\n            onPress: function onPress() {\n              _this2.navigate(item.ID);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 11\n            }\n          }, React.createElement(Text, {\n            style: styles.GridViewInsideTextItemStyle,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 13\n            }\n          }, item.fscore)));\n        },\n        numColumns: xSize,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return app;\n}(React.Component);\n\nexport { app as default };\n\nfunction newHeu() {\n  OpenSet.push(map[startID]);\n  var CameList = [];\n  var GScore = 0;\n  var FScore = 0;\n  var CurrentID = [];\n  var CIDL = [];\n\n  do {\n    var cf = 100;\n\n    for (var index = 0; index < OpenSet.length; index++) {\n      if (OpenSet[index].fscore < cf) {\n        CIDL.push(map[OpenSet[index].ID].ID);\n      }\n    }\n\n    console.log(CurrentID + 'tämä on CurrentID');\n\n    if (CurrentID == endID) {\n      break;\n    }\n\n    removeFromList(CurrentID);\n    console.log(map[CurrentID]);\n\n    for (var _index = 0; _index < CIDL.length; _index++) {\n      CurrentID = CIDL[_index];\n      map[CurrentID].gscore = GScore + 1;\n      var tentGScore;\n\n      for (var _index2 = 0; _index2 < 4; _index2++) {\n        map[CurrentID].Neighbours = Neighbours(map[CurrentID].x, map[CurrentID].y, map[CurrentID].ID);\n      }\n\n      for (var _index3 = 0; _index3 < map[CurrentID].Neighbours.length; _index3++) {\n        map[map[CurrentID].Neighbours[_index3].ID].gscore = GScore + 2;\n        tentGScore = GScore + 1;\n        console.log(tentGScore);\n        console.log(map[map[CurrentID].Neighbours[_index3].ID].gscore);\n\n        if (tentGScore < map[map[CurrentID].Neighbours[_index3].ID].gscore) {\n          map[map[CurrentID].Neighbours[_index3].ID].gscore = tentGScore;\n          map[map[CurrentID].Neighbours[_index3].ID].fscore = Distance(map[CurrentID].Neighbours[_index3].Location) + GScore;\n\n          if (DoesInclude(map[map[CurrentID].Neighbours[_index3].ID].ID) == false) {\n            OpenSet.push(map[map[CurrentID].Neighbours[_index3].ID]);\n            console.log('lisätty');\n          }\n        }\n      }\n    }\n\n    console.log(OpenSet);\n  } while (CurrentID != endID);\n}\n\nfunction removeFromList(removeID) {\n  for (var index = 0; index < OpenSet.length; index++) {\n    if (OpenSet[index].ID == removeID) {\n      OpenSet.splice(index, 1);\n    }\n  }\n}\n\nfunction aStar(current) {\n  do {\n    goal = false;\n    var gscore = 0;\n\n    for (var index = 0; index < 4; index++) {\n      current[0].Neighbours = Neighbours(current[0].x, current[0].y, current[0].ID);\n    }\n\n    gscore = current[0].gscore + 1;\n    current[0].fscore = Distance(current[0].Location) + gscore;\n\n    for (var _index4 = 0; _index4 < current[0].Neighbours.length; _index4++) {\n      current[0].Neighbours[_index4].fscore = Distance(current[0].Neighbours[_index4].Location) + gscore;\n      map[current[0].Neighbours[_index4].ID].fscore = current[0].Neighbours[_index4].fscore;\n      OpenSet.push(map[current[0].Neighbours[_index4].ID]);\n      map[current[0].Neighbours[_index4].ID].cameFrom = current[0].ID;\n\n      for (var _index5 = 0; _index5 < OpenSet.length; _index5++) {\n        if (OpenSet[_index5].ID == current[0].ID) {\n          OpenSet.splice(_index5, 1);\n          console.log('poistin');\n        }\n      }\n    }\n\n    for (var _index6 = 0; _index6 < OpenSet.length; _index6++) {\n      console.log(OpenSet[_index6].Location);\n    }\n\n    last = current[0].ID;\n\n    if (OpenSet.length == 0) {\n      goal = true;\n    }\n\n    var min = null;\n    var id = null;\n    var Delete = null;\n    var min = xSize * ySize - 1;\n\n    for (var _index7 = 0; _index7 < OpenSet.length; _index7++) {\n      var id = null;\n\n      if (min > OpenSet[_index7].fscore) {\n        min = OpenSet[_index7].fscore;\n        id = OpenSet[_index7].ID;\n        Delete = _index7;\n      }\n    }\n\n    for (var _index8 = 0; _index8 < current.length; _index8++) {\n      if (JSON.stringify(current[_index8].Location) == JSON.stringify(end)) {\n        goal = true;\n      }\n    }\n\n    var cf = min;\n    current.splice(0, current.length);\n\n    for (var _index9 = 0; _index9 < OpenSet.length; _index9++) {\n      if (OpenSet[_index9].fscore == cf) {\n        current.push(map[OpenSet[_index9].ID]);\n      }\n    }\n  } while (goal != true);\n}\n\nfunction trail() {\n  var trailPath = map[last];\n  trailPath.trail = true;\n  var past = true;\n  map[startID].trail = true;\n\n  do {\n    var bestFscore = mapSize;\n    var bestID = 0;\n\n    for (var index = 0; index < trailPath.Neighbours.length; index++) {}\n\n    last = map[trailPath.ID];\n    trailPath = map[bestID];\n    console.log(trailPath.ID);\n\n    if (trailPath.ID == startID) {\n      past = false;\n    }\n  } while (past != false);\n}\n\nfunction DoesInclude(id) {\n  var already = false;\n\n  for (var index = 0; index < OpenSet.length; index++) {\n    if (OpenSet[index].ID == id) {\n      already = true;\n      console.log(\"tarkistetaan on duplicatee\");\n      console.log(OpenSet[index].ID);\n      console.log(id);\n    }\n  }\n\n  return already;\n}\n\nfunction cell(nx, ny, random, idnum) {\n  var ID = idnum;\n  var cameFrom = 0;\n  var x = nx;\n  var y = ny;\n  var loc = [x, y];\n  var fscore = 0;\n  var gscore = 0;\n  var wall = wallorNot(random, loc);\n  var blocks = [];\n  var trail = false;\n  return {\n    'x': x,\n    'y': y,\n    'wall': wall,\n    'Neighbours': blocks,\n    'Location': loc,\n    'fscore': fscore,\n    'gscore': gscore,\n    'ID': ID,\n    'cameFrom': cameFrom,\n    'trail': trail\n  };\n}\n\nfunction Neighbours(x, y, id) {\n  var NL = [];\n\n  if (y > 0) {\n    if (map[id - xSize].wall != true) {\n      NL.push(map[id - xSize]);\n    }\n  }\n\n  if (y < ySize - 1) {\n    if (map[id + xSize].wall != true) {\n      NL.push(map[id + xSize]);\n    }\n  }\n\n  if (x > 0) {\n    if (map[id - 1].wall != true) {\n      NL.push(map[id - 1]);\n    }\n  }\n\n  if (x < xSize - 1) {\n    if (map[id + 1].wall != true) {\n      NL.push(map[id + 1]);\n    }\n  }\n\n  for (var _x = 0; _x < OpenSet.length; _x++) {\n    for (var _y = 0; _y < NL.length; _y++) {\n      if (OpenSet[_x].ID == NL[_y].ID) {\n        NL.splice(_y, 1);\n      }\n    }\n  }\n\n  return NL;\n}\n\nfunction wallorNot(random, loc) {\n  if (JSON.stringify(loc) == JSON.stringify(start) || JSON.stringify(loc) == JSON.stringify(end)) {\n    return false;\n  } else {\n    if (random > 0.8) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nfunction Mapinit() {\n  var num = 0;\n\n  for (var y = 0; y < ySize; y++) {\n    for (var x = 0; x < xSize; x++) {\n      var randomnum = Math.random();\n      map.push(cell(x, y, randomnum, num));\n      num++;\n    }\n  }\n}\n\nfunction drawmap(item) {\n  var blockstyle;\n\n  if (item.trail == true) {\n    blockstyle = styles.Trail;\n  }\n\n  if (!item.wall) {\n    if (item.trail == true) {\n      blockstyle = styles.Trail;\n    } else {\n      blockstyle = styles.mapfree;\n    }\n  } else {\n    blockstyle = styles.mapblock;\n  }\n\n  return blockstyle;\n}\n\nfunction Distance(location) {\n  return Math.abs(location[0] - end[0]) + Math.abs(location[1] - end[1]);\n}","map":{"version":3,"sources":["C:/reactnativeapps/AI/App.js"],"names":["StatusBar","React","useState","useEffect","Component","styles","map","OpenSet","ClosedSet","xSize","ySize","mapSize","startStop","start","end","startID","endID","last","UltimateCurrent","goal","testi","app","props","handleUpdate","push","splice","length","Mapinit","setState","movecount","state","newHeu","console","log","navigate","id","Location","ID","bind","container","startbutton","item","drawmap","button","GridViewInsideTextItemStyle","fscore","CameList","GScore","FScore","CurrentID","CIDL","cf","index","removeFromList","gscore","tentGScore","Neighbours","x","y","Distance","DoesInclude","removeID","aStar","current","cameFrom","min","Delete","JSON","stringify","trail","trailPath","past","bestFscore","bestID","already","cell","nx","ny","random","idnum","loc","wall","wallorNot","blocks","NL","num","randomnum","Math","blockstyle","Trail","mapfree","mapblock","location","abs"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\n\nimport React ,{ useState, useEffect }from 'react';\n\nimport Component from 'react';\n\nimport {TouchableOpacity, Text, View, FlatList, Button } from 'react-native';\n\nimport styles from './styles/Gridstyles';\n\nconst map=[];\n\nvar OpenSet=[];\nvar ClosedSet=[];\n\nvar xSize = 5;\nvar ySize = 5;\nvar mapSize = xSize*ySize;\n\nvar startStop = [];\n\n// var start = [0,0];\n// var end = [xSize-1,ySize-1];\n\nvar start = 0;\nvar end = 0;\n\nvar startID = 0;\nvar endID = 0;\n\nvar last;\n\nvar UltimateCurrent = [];\n\nvar goal = false;\n\n\nvar testi;\n\nexport default class app extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.state={movecount:0};\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.navigate = this.navigate.bind(this);\n    \n    Mapinit(); \n  }\n\n  handleUpdate = () =>{\n    UltimateCurrent.push(map[startID]);\n    if (goal == true){\n      map.splice(0,map.length);\n      startStop.splice(0,startStop.length);\n      Mapinit();\n      UltimateCurrent.push(map[startID]);\n      this.setState({movecount :this.state.movecount - this.state.movecount}) \n    }\n    newHeu();\n    //aStar(UltimateCurrent);\n    //trail();\n    console.log(map);\n    this.setState({movecount :this.state.movecount + 1})    \n  }\n\n  navigate = (id) =>{\n    if(startStop.length < 2){\n      startStop.push(map[id]);\n      console.log(startStop);\n    }\n    else{\n      console.log('On jo kaksi');\n    }\n\n    if(startStop.length > 1){\n      end = startStop[1].Location;\n      endID = startStop[1].ID;\n    }\n    else{\n      start = startStop[0].Location;\n      startID = startStop[0].ID;\n    }\n\n    console.log(startID);\n    console.log(endID);\n  }\n    \n  render(){\n    return(\n    <View style={styles.container}>\n      <Text>{this.state.movecount}</Text>\n      <Button title=\"try\" onPress={this.handleUpdate} style={styles.startbutton}></Button>\n      <FlatList\n        data={map}\n        extraData={this.state.movecount}\n        renderItem={({item}) => <View style={drawmap(item)}>\n          <TouchableOpacity style={styles.button} onPress={()=>{this.navigate(item.ID)}}>\n            <Text style={styles.GridViewInsideTextItemStyle}>{item.fscore}</Text>\n          </TouchableOpacity>            \n        </View>}\n        numColumns={xSize}\n      />\n    </View>\n    );\n  } \n}\n\nfunction newHeu(){\n\n  OpenSet.push(map[startID]);\n  var CameList = [];\n\n  var GScore = 0; // nopein tällä hetkellä tiedettävä matka\n\n  var FScore = 0; // reitin pituuden paras veikkaus \n\n  var CurrentID = [];\n\n  var CIDL = [];\n\n  do{\n\n    var cf = 100;\n    for (let index = 0; index < OpenSet.length; index++) {\n      if(OpenSet[index].fscore<cf){\n        CIDL.push(map[OpenSet[index].ID].ID);\n      }\n    }\n\n    console.log(CurrentID + 'tämä on CurrentID');\n    if(CurrentID == endID){\n      break;\n    }  \n    \n    removeFromList(CurrentID);\n\n    console.log(map[CurrentID]);\n    for (let index = 0; index < CIDL.length; index++) {\n      CurrentID = CIDL[index];\n\n      map[CurrentID].gscore = GScore + 1; // matkan arvo alusta tähän \n\n      var tentGScore; // reitti alusta nykyisen kautta naapuriin.\n      for (let index = 0; index < 4; index++) {\n        map[CurrentID].Neighbours = Neighbours(map[CurrentID].x, map[CurrentID].y, map[CurrentID].ID);\n      }\n\n      for (let index = 0; index < map[CurrentID].Neighbours.length; index++) {\n        map[map[CurrentID].Neighbours[index].ID].gscore = GScore + 2\n        tentGScore = GScore + 1; // +1 koska kaikkien välimatka käytettävällä kartalla on arvoltaan 1 jos ei niin tässä pitäisi lasken välimatka ja lisätä se tentativeen\n\n        console.log(tentGScore);\n        console.log(map[map[CurrentID].Neighbours[index].ID].gscore);\n\n        if(tentGScore < map[map[CurrentID].Neighbours[index].ID].gscore){\n          map[map[CurrentID].Neighbours[index].ID].gscore = tentGScore;\n          map[map[CurrentID].Neighbours[index].ID].fscore = Distance(map[CurrentID].Neighbours[index].Location)+GScore;\n          if (DoesInclude(map[map[CurrentID].Neighbours[index].ID].ID) == false){\n            OpenSet.push(map[map[CurrentID].Neighbours[index].ID]);\n            console.log('lisätty');\n          }\n        }\n      }\n  }\n  console.log(OpenSet);\n  }while(CurrentID != endID )\n\n}\n\nfunction removeFromList(removeID){\n  for (let index = 0; index < OpenSet.length; index++) {\n    if(OpenSet[index].ID == removeID){\n      OpenSet.splice(index,1);\n    }\n  }\n}\n\nfunction aStar(current){\ndo{\n  goal = false;\n  var gscore = 0;\n\n  for (let index = 0; index < 4; index++) {\n    current[0].Neighbours = Neighbours(current[0].x, current[0].y, current[0].ID);\n  }\n\n  gscore = current[0].gscore + 1;\n  current[0].fscore = Distance(current[0].Location)+gscore;\n\n  for (let index = 0; index < current[0].Neighbours.length; index++) {\n\n    current[0].Neighbours[index].fscore = Distance(current[0].Neighbours[index].Location)+gscore;\n    map[current[0].Neighbours[index].ID].fscore = current[0].Neighbours[index].fscore;\n    OpenSet.push(map[current[0].Neighbours[index].ID]);\n    map[current[0].Neighbours[index].ID].cameFrom = current[0].ID;\n\n    for (let index = 0; index < OpenSet.length; index++) {\n      if(OpenSet[index].ID == current[0].ID){\n        OpenSet.splice(index,1);\n        console.log('poistin');\n      }\n    }\n  }\n  \n  for (let index = 0; index < OpenSet.length; index++) {\n    console.log(OpenSet[index].Location);\n  }\n  \n  last = current[0].ID;\n  if (OpenSet.length==0){\n     goal = true;\n  }\n\n  var min = null;\n  var id = null;\n  var Delete = null;\n\n  var min = xSize*ySize-1;\n  for (let index = 0; index < OpenSet.length; index++) {\n    var id = null;\n    if (min > OpenSet[index].fscore)  {\n      min = OpenSet[index].fscore;\n      id = OpenSet[index].ID;\n      Delete = index;\n    }\n  }\n\n\n  for (let index = 0; index < current.length; index++) {\n    if(JSON.stringify(current[index].Location)==JSON.stringify(end)){\n      goal = true;\n    }  \n  }\n\n \n  var cf = min;\n  current.splice(0,current.length);\n\n  for (let index = 0; index < OpenSet.length; index++) {\n    if(OpenSet[index].fscore==cf){\n    current.push(map[OpenSet[index].ID]);\n    }\n  }\n\n}while(goal!=true)//(JSON.stringify(current.Location)!=JSON.stringify(end))\n}\n\nfunction trail(){\n\n  var trailPath = map[last];\n  trailPath.trail = true;\n  var past = true;\n\n  map[startID].trail = true; // värjää aloituksen reitiksi\n\n  do{\n    var bestFscore = mapSize\n    var bestID = 0;\n\n    for (let index = 0; index < trailPath.Neighbours.length; index++) {\n      \n    }\n\n    last = map[trailPath.ID];\n    trailPath = map[bestID];\n\n    console.log(trailPath.ID);\n\n    if(trailPath.ID==startID){\n      past = false;\n    }\n\n  }while(past != false)\n}\n\nfunction DoesInclude(id){\n  var already = false;\n  for (let index = 0; index < OpenSet.length; index++) {\n    if(OpenSet[index].ID == id){\n      already = true;\n      console.log(\"tarkistetaan on duplicatee\");\n      console.log(OpenSet[index].ID);\n      console.log(id);\n    }\n  }\n  return already;\n}\n\nfunction cell(nx,ny,random,idnum){\n\n  let ID = idnum;\n  let cameFrom = 0;\n  let x = nx;\n  let y = ny;\n  let loc = [x,y];\n  let fscore = 0;\n  let gscore = 0;\n  let wall = wallorNot(random, loc);\n  var blocks = [];\n  var trail = false;\n  \n  // jatka tästä\n  return {'x':x,'y':y,'wall':wall, 'Neighbours':blocks, 'Location':loc , 'fscore':fscore,'gscore':gscore ,'ID':ID, 'cameFrom':cameFrom,'trail':trail};\n}\n\nfunction Neighbours(x, y, id){\n\n  var NL = [];\n\n  if(y > 0){ // voiko mennä ylös\n    \n    if (map[id-(xSize)].wall != true){\n      NL.push(map[id-(xSize)]);\n    }\n  }\n  if(y < ySize-1){ // voiko mennä alas\n    \n    if (map[id+(xSize)].wall != true){\n      NL.push(map[id+(xSize)]);\n    }\n  }\n  if(x > 0){ // voiko mennä vasemmalle\n    \n    if (map[id-1].wall != true){\n      NL.push(map[id-1]);\n    }\n  }\n  if(x < xSize-1){ // voiko mennä oikealle\n    \n    if (map[id+1].wall != true){\n      NL.push(map[id+1]);\n    }\n  }\n  \n  for (let x = 0; x < OpenSet.length; x++) {\n    for (let y = 0; y < NL.length; y++) {\n      if (OpenSet[x].ID == NL[y].ID){\n        NL.splice(y,1);\n      }\n      \n    }\n  }\n  \n  return NL;\n}\n\nfunction wallorNot(random,loc){\n  if(JSON.stringify(loc)==JSON.stringify(start) || JSON.stringify(loc) == JSON.stringify(end)){\n    return false;\n  }\n  else{\n    if(random>0.8){\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n}\n\nfunction Mapinit(){\n  var num = 0;\n  for (let y = 0; y < ySize; y++) {\n    for (let x = 0; x < xSize; x++) {\n      var randomnum = Math.random();\n      map.push(cell(x,y,randomnum,num));\n      num++\n     }\n  }\n}\n\nfunction drawmap(item){\n  var blockstyle;\n  if (item.trail == true){\n    blockstyle = styles.Trail;\n  }\n  if (!item.wall){\n    if (item.trail == true){\n      blockstyle = styles.Trail;\n    }\n    else{\n    blockstyle = styles.mapfree;\n    }\n  }\n  else{\n    blockstyle = styles.mapblock;\n  }\n  return(blockstyle);\n}\n\nfunction Distance(location){\n  return Math.abs(location[0]-end[0])+Math.abs(location[1]-end[1]); // toimii vain jos aloitus on vasemmassa yläkulmassa\n}"]},"metadata":{},"sourceType":"module"}