{"ast":null,"code":"var _jsxFileName = \"c:\\\\reactnativeapps\\\\AI\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { DrawerLayoutAndroidComponent } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nvar mapgrid = [{\n  numv: 1,\n  func: 'free'\n}, {\n  numv: 2,\n  func: 'free'\n}, {\n  numv: 3,\n  func: 'free'\n}, {\n  numv: 4,\n  func: 'free'\n}, {\n  numv: 5,\n  func: 'free'\n}, {\n  numv: 6,\n  func: 'free'\n}, {\n  numv: 7,\n  func: 'free'\n}, {\n  numv: 8,\n  func: 'free'\n}, {\n  numv: 9,\n  func: 'free'\n}, {\n  numv: 10,\n  func: 'free'\n}, {\n  numv: 11,\n  func: 'free'\n}, {\n  numv: 12,\n  func: 'free'\n}, {\n  numv: 13,\n  func: 'block'\n}, {\n  numv: 14,\n  func: 'free'\n}, {\n  numv: 15,\n  func: 'free'\n}, {\n  numv: 16,\n  func: 'free'\n}, {\n  numv: 17,\n  func: 'free'\n}, {\n  numv: 18,\n  func: 'free'\n}, {\n  numv: 19,\n  func: 'free'\n}, {\n  numv: 20,\n  func: 'free'\n}, {\n  numv: 21,\n  func: 'free'\n}, {\n  numv: 22,\n  func: 'free'\n}, {\n  numv: 23,\n  func: 'free'\n}, {\n  numv: 24,\n  func: 'free'\n}, {\n  numv: 25,\n  func: 'free'\n}];\n\nvar GetGridViewItem = function GetGridViewItem(item) {\n  Alert.alert(item);\n};\n\nexport default function App() {\n  var _this = this;\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Open up App.js to start working on your app!\"), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: mapgrid,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: drawmap(item),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: styles.GridViewInsideTextItemStyle,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }));\n    },\n    numColumns: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction dMap() {\n  var mapsize = mapgrid.length;\n  return mapsize;\n}\n\n;\n\nfunction drawmap(item) {\n  var blockstyle;\n\n  if (item.func == 'block') {\n    blockstyle = styles.mapfree.backgroundColor = 'red';\n  } else {\n    blockstyle = styles.mapfree.backgroundColor = 'white';\n  }\n\n  return blockstyle;\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  mapfree: {\n    justifyContent: 'center',\n    flex: 1,\n    alignItems: 'center',\n    height: 50,\n    width: 50,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'white'\n  },\n  mapblock: {\n    justifyContent: 'center',\n    flex: 1,\n    alignItems: 'center',\n    height: 50,\n    width: 50,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'white'\n  },\n  GridViewInsideTextItemStyle: {\n    color: '#fff',\n    fontSize: 18,\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["c:/reactnativeapps/AI/App.js"],"names":["StatusBar","React","DrawerLayoutAndroidComponent","mapgrid","numv","func","GetGridViewItem","item","Alert","alert","App","styles","container","drawmap","GridViewInsideTextItemStyle","dMap","mapsize","length","blockstyle","mapfree","backgroundColor","StyleSheet","create","flex","alignItems","justifyContent","height","width","borderWidth","borderColor","mapblock","color","fontSize"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { DrawerLayoutAndroidComponent, StyleSheet, Text, View, FlatList } from 'react-native';\n\n\n  const mapgrid = [\n      {numv:1, func:'free'},\n      {numv:2, func:'free'},\n      {numv:3, func:'free'},\n      {numv:4, func:'free'},\n      {numv:5, func:'free'},\n\n      {numv:6, func:'free'},\n      {numv:7, func:'free'},\n      {numv:8, func:'free'},\n      {numv:9, func:'free'},\n      {numv:10, func:'free'},\n\n      {numv:11, func:'free'},\n      {numv:12, func:'free'},\n      {numv:13, func:'block'},\n      {numv:14, func:'free'},\n      {numv:15, func:'free'},\n\n      {numv:16, func:'free'},\n      {numv:17, func:'free'},\n      {numv:18, func:'free'},\n      {numv:19, func:'free'},\n      {numv:20, func:'free'},\n\n      {numv:21, func:'free'},\n      {numv:22, func:'free'},\n      {numv:23, func:'free'},\n      {numv:24, func:'free'},\n      {numv:25, func:'free'},\n\n  ]\n\n  const GetGridViewItem = (item) => {\n  \n    Alert.alert(item);\n    \n    };\n\nexport default function App() {\n\n  return (\n    <View style={styles.container}>\n      <Text>Open up App.js to start working on your app!</Text>\n      <StatusBar style=\"auto\" />\n      <FlatList\n        data={mapgrid}\n        renderItem={({item}) => <View style={drawmap(item)}>\n          <Text style={styles.GridViewInsideTextItemStyle}></Text>            \n        </View>}\n        numColumns={5}\n      />\n    </View>\n  );\n}\n\nfunction dMap(){\n var mapsize = mapgrid.length;\n\n  return(\n    mapsize\n  );\n};\n\nfunction drawmap(item){\n   var blockstyle;\n\n  if (item.func == 'block'){\n    blockstyle = (styles.mapfree.backgroundColor = 'red');\n  }\n  else{\n    blockstyle = styles.mapfree.backgroundColor = 'white';\n  }\n\n\n  return(blockstyle);\n}\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  mapfree: {\n    justifyContent: 'center',\n    flex:1,\n    alignItems: 'center',\n    height: 50,\n    width: 50,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'white'\n  },\n\n  mapblock: {\n    justifyContent: 'center',\n    flex:1,\n    alignItems: 'center',\n    height: 50,\n    width: 50,\n    borderWidth: 2,\n    borderColor: 'red',\n    backgroundColor: 'white'\n  },\n \n  GridViewInsideTextItemStyle: {\n \n   color: '#fff',\n   fontSize: 18,\n   justifyContent: 'center',\n   \n },\n});\n"]},"metadata":{},"sourceType":"module"}